{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/css/diaspora.css","path":"css/diaspora.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/diaspora.js","path":"js/diaspora.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/bg_ff.jpg","path":"img/bg_ff.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/ffBg.jpg","path":"img/ffBg.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/lalafei.jpeg","path":"img/lalafei.jpeg","modified":0,"renderable":1},{"_id":"themes/landscape/source/img/sasaki.ico","path":"img/sasaki.ico","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1577256094398},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1577256094398},{"_id":"themes/landscape/README.md","hash":"c2118504a024e7eade2ad2a0cc293db8d3eb63fa","modified":1577254339207},{"_id":"themes/landscape/LICENSE","hash":"63175a16773044bed84e1778009a54ad03dd5520","modified":1577254339206},{"_id":"themes/landscape/_config.yml","hash":"8f8a6c58adac7095e9433ef73008d5907e300b44","modified":1578471013917},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1577256094409},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1577256087676},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1577256094399},{"_id":"themes/landscape/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1577254339207},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1577256094400},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1577254339208},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1577256094400},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1577256094400},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1577256094401},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1577256094401},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1577256094401},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1577256094401},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1577254339209},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1577256094401},{"_id":"themes/landscape/layout/archive.ejs","hash":"b6c505939cd3f45c3a062b201bf8799a8e5ad7a0","modified":1577254339214},{"_id":"themes/landscape/layout/category.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1577254339214},{"_id":"themes/landscape/layout/index.ejs","hash":"7ccb03f40fada2cd74c00554e5b6718508545d71","modified":1577254339214},{"_id":"themes/landscape/layout/layout.ejs","hash":"bbead31ed8f81cb75b22d6c220793c9ed4ff3e66","modified":1577254339214},{"_id":"themes/landscape/layout/page.ejs","hash":"c311e177fc5eea6954e313374e73bd690814c91a","modified":1577254339215},{"_id":"themes/landscape/layout/post.ejs","hash":"e585d8b4680c52dccfc40ffa6b2c5df515bf20d2","modified":1577254339215},{"_id":"themes/landscape/layout/tag.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1577254339215},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1577256094410},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1577256094402},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1577256094402},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1577256094402},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1577256094403},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1577256094402},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"4806289a1c3de19a1cc4e6242c82cdd429c3bfe8","modified":1577254339210},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"af13f26ebecc228ff8893cf458959aec9ba328d0","modified":1577254339211},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1577256094403},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1577256094404},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1577256094404},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1577256094407},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1577256094407},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1577256094407},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1577256094407},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1577256094408},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1577256094408},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1577256094421},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1577256094421},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1577256094421},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1577256094422},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1577256094421},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1577256094421},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1577256094410},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1577256094423},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1577256094424},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1577256094424},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1577256094420},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1577256094413},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1577256094425},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1577254339212},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"c2b4ce7e1d7eed59f4c333915cd431f008f898e3","modified":1577254339213},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1577256094405},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1577256094405},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"33f2a96f17fb1efa354c92aef906d96984abd9ab","modified":1577254339213},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1577256094406},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1577256094423},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1577256094422},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1577256094422},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1577256094423},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1577256094422},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1577256094423},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1577256094410},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1577256094411},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1577256094411},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1577256094411},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1577256094411},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1577256094412},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1577256094411},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1577256094412},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1577256094412},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1577256094412},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1577256094413},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1577256094413},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1577256094414},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1577256094418},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1577256094414},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1577256094417},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1577256094416},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1577256094420},{"_id":"themes/landscape/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577256318142},{"_id":"themes/landscape/package-lock.json","hash":"8c803a254d1ca477cfec6b31dc35f24812563ccf","modified":1577255286620},{"_id":"themes/landscape/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1577254339208},{"_id":"themes/landscape/scripts/page_title.js","hash":"35dbc39e4edd53b20f5433dc0d1708024049186d","modified":1577254339215},{"_id":"themes/landscape/layout/_partial/categories.ejs","hash":"02cf5a962644da311e52fa441d2b300b0c9286a5","modified":1577254339210},{"_id":"themes/landscape/layout/_partial/menu.ejs","hash":"fdf2b8d1c39df30583b49eada4342646c17e9dfd","modified":1578366876382},{"_id":"themes/landscape/layout/_partial/photoswipe.ejs","hash":"d1d36cf0a2c03ff3c2acbc208fe11cd0afd8b7bd","modified":1577254339211},{"_id":"themes/landscape/layout/_partial/list.ejs","hash":"8e03499580aa81ec0b4c8316347b4e3839849007","modified":1577254339211},{"_id":"themes/landscape/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1577254339211},{"_id":"themes/landscape/layout/_partial/screen.ejs","hash":"13af4ef864cd53ec5a657aa1f5ebc4bc2c175297","modified":1577258652375},{"_id":"themes/landscape/layout/_partial/scripts.ejs","hash":"041a2e405157447b20b5d339596f35a2ec89808c","modified":1577254339213},{"_id":"themes/landscape/layout/_partial/tags.ejs","hash":"16cfcf585417ec279c12d8cfbcf6383bf7f2a8c6","modified":1577254339214},{"_id":"themes/landscape/source/css/diaspora.css","hash":"b4cdf46b09eb28180b0603667e29ab0412238733","modified":1578470013854},{"_id":"themes/landscape/source/img/favicon.png","hash":"efb938a836c0b69baecdaadb89a94511f9abb299","modified":1577254339217},{"_id":"themes/landscape/source/img/logo.png","hash":"26aa13d23a30369b683aab639499f977fe9f8175","modified":1577254339218},{"_id":"themes/landscape/source/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1577254339220},{"_id":"themes/landscape/source/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1577254339222},{"_id":"themes/landscape/source/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1577254339224},{"_id":"themes/landscape/source/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1577254339225},{"_id":"themes/landscape/source/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1577254339225},{"_id":"themes/landscape/source/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1577254339227},{"_id":"themes/landscape/source/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1577254339221},{"_id":"themes/landscape/source/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1577254339226},{"_id":"themes/landscape/layout/_partial/post/article.ejs","hash":"e825fd563381178382f790a6ce3da71ca7a3f113","modified":1577254339211},{"_id":"themes/landscape/layout/_partial/post/gitalk.ejs","hash":"92002826f42956360b867fcc364e5a6a47f0bac3","modified":1578361890162},{"_id":"themes/landscape/layout/_partial/post/header.ejs","hash":"1809fa1db9c24613b7579ba9977296ffd561bc6f","modified":1578362022124},{"_id":"themes/landscape/layout/_partial/post/item.ejs","hash":"b7a75aa667765b5c3a16b3b9a71ed38ea0a128a4","modified":1577254339212},{"_id":"themes/landscape/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1577254339217},{"_id":"themes/landscape/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1577254339219},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1577254339223},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1577254339223},{"_id":"themes/landscape/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1577254339224},{"_id":"themes/landscape/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1577254339224},{"_id":"source/about/me.md","hash":"f60c39053a6356e0e157ee84b8d2ab6d62145496","modified":1578361619504},{"_id":"source/_posts/my-text.md","hash":"58f5139b72ea7041283ea5a4c7a40f8217ed7651","modified":1578361793588},{"_id":"source/_posts/vue-3-0-学习记录.md","hash":"3955eb686f8eba05a1c1787bd466e2cd7f5c61ae","modified":1578450697253},{"_id":"themes/landscape/source/img/vue3.0.jpg","hash":"b5b2179598657db69c60604de8385c46977c76aa","modified":1578362504017},{"_id":"themes/landscape/source/img/ffBg.jpg","hash":"835e41f28aa250a67884d8291273bf776a0a1af0","modified":1578365800353},{"_id":"themes/landscape/source/img/bg_ff.jpg","hash":"e5b9997d2d28d26664c61b3b992a46165c9848b0","modified":1578364923197},{"_id":"source/_posts/css-drygoods.md","hash":"e416a3d2a5f9ae520782dfd18d8edb0b51601fcc","modified":1578451513081},{"_id":"source/_posts/image/css_text_ff.jpg","hash":"3a444b7375b71d614ad14788dfa4baab0965eb93","modified":1578449328749},{"_id":"source/_posts/img/css_text_ff.jpg","hash":"3a444b7375b71d614ad14788dfa4baab0965eb93","modified":1578449328749},{"_id":"themes/landscape/source/img/lalafei.jpeg","hash":"40d385a5ca2bba93796958877139244913b1cf0b","modified":1578450635949},{"_id":"public/2019/12/25/hello-world/index.html","hash":"be472af1185f8a206c1224607692eaeecb3fd921","modified":1578471251901},{"_id":"public/archives/index.html","hash":"312b60e329060e507a10830d1181ac7e2bc44291","modified":1578471251901},{"_id":"public/archives/2019/index.html","hash":"0c3daaf0163ac6ff56ec1fa40b2560798f3909c6","modified":1578471251901},{"_id":"public/archives/2019/12/index.html","hash":"0daeaca23f2073346b6e0c4aced879dc4ea6ab14","modified":1578471251901},{"_id":"public/archives/2020/index.html","hash":"c9cba075ff9b25db6897933ca21c428af0366d54","modified":1578471251901},{"_id":"public/archives/2020/01/index.html","hash":"8f4a19547ffd3f25fa2c180e978aef91a4304631","modified":1578471251901},{"_id":"public/index.html","hash":"31e2186cf4b050fcbbe74cc69ac3928f513eff30","modified":1578471251901},{"_id":"public/2020/01/08/css-drygoods/index.html","hash":"33d9d020101bda43480c246fdb26d6a7cd58a0b0","modified":1578471251901},{"_id":"public/2020/01/07/vue-3-0-学习记录/index.html","hash":"912b0148e629f1ea84b5e2c9f4fddc9329027072","modified":1578471251901},{"_id":"public/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1578451844332},{"_id":"public/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1578451844332},{"_id":"public/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1578451844332},{"_id":"public/img/lalafei.jpeg","hash":"40d385a5ca2bba93796958877139244913b1cf0b","modified":1578451844332},{"_id":"public/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1578451844332},{"_id":"public/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1578451844332},{"_id":"public/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1578451844332},{"_id":"public/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1578451844332},{"_id":"public/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1578451844332},{"_id":"public/img/ffBg.jpg","hash":"835e41f28aa250a67884d8291273bf776a0a1af0","modified":1578451844332},{"_id":"public/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1578451844332},{"_id":"public/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1578451844332},{"_id":"public/css/diaspora.css","hash":"9a0e2fbf349026007af3452d99272a56b7a63418","modified":1578451844332},{"_id":"public/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1578451844332},{"_id":"public/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1578451844332},{"_id":"public/img/bg_ff.jpg","hash":"e5b9997d2d28d26664c61b3b992a46165c9848b0","modified":1578451844332},{"_id":"public/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1578451844332},{"_id":"public/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1578451844332},{"_id":"source/404/index.md","hash":"4fcf92eed1b7074596e12a67fa22a693d7fe5b5f","modified":1578460872859},{"_id":"public/404.html","hash":"7b1deb33e19d83f72b12170bbf4cd12423f959b4","modified":1578471251901},{"_id":"themes/landscape/source/img/sasaki.ico","hash":"9fb5284dc3315f6483c59c4ff5f1033574cf42a4","modified":1578471135591},{"_id":"public/img/sasaki.ico","hash":"9fb5284dc3315f6483c59c4ff5f1033574cf42a4","modified":1578471251901}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2020-01-08T05:14:14.000Z","toc":false,"comments":0,"_content":"yoriichi 404","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2020-01-08 13:14:14\ntoc: false\ncomments: false\npermalink: /404\n---\nyoriichi 404","updated":"2020-01-08T05:21:12.859Z","path":"/404.html","layout":"page","_id":"ck54uwkiv0000rsc9cwgybgsh","content":"<p>yoriichi 404</p>\n","site":{"data":{}},"excerpt":"","more":"<p>yoriichi 404</p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2019-12-25T06:41:27.676Z","updated":"2019-12-25T06:41:27.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4kxli4j0000xxc991mo9stj","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"vue 3.0 响应式系统学习记录","date":"2020-01-07T01:55:48.000Z","cover":"img/lalafei.jpeg","_content":"#### 一、响应式系统实现过程: \n![RUNOOB 图标](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n#### 二、基本例子\nVue 3.0 的响应式系统是独立的模块，可以完全脱离 Vue 而使用，所以我们在 clone 了源码下来以后，可以直接在 `packages/reactivity` 模块下调试。\n1. 在项目根目录运行 `yarn dev reactivity`，然后进入 `packages/reactivity` 目录找到产出的 `dist/reactivity.global.js` 文件。\n2. 新建一个 `index.html`，写入如下代码：\n```\n<script src=\"./dist/reactivity.global.js\"></script>\n<script>\nconst { reactive, effect } = VueObserver\n\nconst origin = {\n  count: 0\n}\nconst state = reactive(origin)\n\nconst fn = () => {\n  const count = state.count\n  console.log(`set count to ${count}`)\n}\neffect(fn)\n</script>\n```\n3. 在浏览器打开该文件，于控制台执行 `state.count++`，便可看到输出 `set count to 1`。\n\n在上述的例子中，我们使用 `reactive()` 函数把 `origin` 对象转化成了 Proxy 对象 `state`；使用 `effect()` 函数把 `fn()` 作为响应式回调。当 `state.count` 发生变化时，便触发了 `fn()`。接下来我们将以这个例子结合上文的流程图，来讲解这套响应式系统是怎么运行的。\n\n#### 三、初始化阶段\n![vueInt](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b098adf?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n在初始化阶段，主要做了两件事。\n\n1. 把 `origin` 对象转化成响应式的 Proxy 对象 `state`。\n2. 把函数 `fn()` 作为一个响应式的 effect 函数。\n\n首先我们来分析第一件事。\n\n大家都知道，Vue 3.0 使用了 Proxy 来代替之前的 `Object.defineProperty()`，改写了对象的 getter/setter，完成依赖收集和响应触发。但是在这一阶段中，我们暂时先不管它是如何改写对象的 getter/setter 的，这个在后续的”依赖收集阶段“会详细说明。为了简单起见，我们可以把这部分的内容浓缩成一个只有两行代码的 `reactive()` 函数：\n\n```\nexport function reactive(target) {\n  const observed = new Proxy(target, handler)\n  return observed\n}\n复制代码\n```\n\n> 完整代码在 [reactive.js](https://github.com/jrainlau/tiny-reactive/blob/master/src/reactive.js)。这里的 `handler` 就是改造 getter/setter 的关键，我们放到后文讲解。\n\n接下来我们分析第二件事。\n\n当一个普通的函数 `fn()` 被 `effect()` 包裹之后，就会变成一个响应式的 effect 函数，而 `fn()` 也会被**立即执行一次**。\n\n**由于在 `fn()` 里面有引用到 Proxy 对象的属性，所以这一步会触发对象的 getter，从而启动依赖收集。**\n\n除此之外，这个 effect 函数也会被压入一个名为”activeReactiveEffectStack“（此处为 effectStack）的栈中，供后续依赖收集的时候使用。\n\n来看看代码（完成代码请看 [effect.js](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L47-L65)）：\n\n```\nexport function effect (fn) {\n  // 构造一个 effect\n  const effect = function effect(...args) {\n    return run(effect, fn, args)\n  }\n  // 立即执行一次\n  effect()\n  return effect\n}\n\nexport function run(effect, fn, args) {\n  if (effectStack.indexOf(effect) === -1) {\n    try {\n      // 往池子里放入当前 effect\n      effectStack.push(effect)\n      // 立即执行一遍 fn()\n      // fn() 执行过程会完成依赖收集，会用到 effect\n      return fn(...args)\n    } finally {\n      // 完成依赖收集后从池子中扔掉这个 effect\n      effectStack.pop()\n    }\n  }\n}\n```\n至此，初始化阶段已经完成。接下来就是整个系统最关键的一步——依赖收集阶段。\n\n#### 四、依赖收集阶段\n![vueDepen](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37c860761?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n这个阶段的触发时机，就是在 effect 被立即执行，其内部的 `fn()` 触发了 Proxy 对象的 getter 的时候。简单来说，只要执行到类似 `state.count` 的语句，就会触发 state 的 getter。\n\n依赖收集阶段最重要的目的，就是建立一份”依赖收集表“，也就是图示的”targetMap\"。targetMap 是一个 WeakMap，其 key 值是~~当前的 Proxy 对象 `state`~~代理前的对象`origin`，而 value 则是该对象所对应的 depsMap。\n\ndepsMap 是一个 Map，key 值为触发 getter 时的属性值（此处为 `count`），而 value 则是**触发过该属性值**所对应的各个 effect。\n\n还是有点绕？那么我们再举个例子。假设有个 Proxy 对象和 effect 如下：\n\n```\nconst state = reactive({\n  count: 0,\n  age: 18\n})\n\nconst effect1 = effect(() => {\n  console.log('effect1: ' + state.count)\n})\n\nconst effect2 = effect(() => {\n  console.log('effect2: ' + state.age)\n})\n\nconst effect3 = effect(() => {\n  console.log('effect3: ' + state.count, state.age)\n})\n复制代码\n```\n\n那么这里的 targetMap 应该为这个样子：\n\n![image](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37aa0f4c6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n这样，`{ target -> key -> dep }` 的对应关系就建立起来了，依赖收集也就完成了。[代码](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L4-L21)如下：\n\n```\nexport function track (target, operationType, key) {\n  const effect = effectStack[effectStack.length - 1]\n  if (effect) {\n    let depsMap = targetMap.get(target)\n    if (depsMap === void 0) {\n      targetMap.set(target, (depsMap = new Map()))\n    }\n\n    let dep = depsMap.get(key)\n    if (dep === void 0) {\n      depsMap.set(key, (dep = new Set()))\n    }\n\n    if (!dep.has(effect)) {\n      dep.add(effect)\n    }\n  }\n}\n\n复制代码\n```\n\n弄明白依赖收集表 targetMap 是非常重要的，因为这是整个响应式系统核心中的核心。\n\n#### 五、响应阶段\n\n回顾上一章节的例子，我们得到了一个 `{ count: 0, age: 18 }` 的 Proxy，并构造了三个 effect。在控制台上看看效果：\n\n![image](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37dadf75d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n效果符合预期，那么它是怎么实现的呢？首先来看看这个阶段的原理图：\n![vue 3 响应式系统原理](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n当修改对象的某个属性值的时候，会触发对应的 setter。\n\nsetter 里面的 trigger() 函数会从依赖收集表里找到当前属性对应的各个 dep，然后把它们推入到 `effects` 和 `computedEffects（计算属性）` 队列中，最后通过 `scheduleRun()` 挨个执行里面的 effect。\n\n由于已经建立了依赖收集表，所以要找到属性所对应的 dep 也就轻而易举了，可以看看具体的[代码实现](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L23-L45)：\n\n```\nexport function trigger (target, operationType, key) {\n  // 取得对应的 depsMap\n  const depsMap = targetMap.get(target)\n  if (depsMap === void 0) {\n    return\n  }\n  // 取得对应的各个 dep\n  const effects = new Set()\n  if (key !== void 0) {\n    const dep = depsMap.get(key)\n    dep && dep.forEach(effect => {\n      effects.add(effect)\n    })\n  }\n  // 简化版 scheduleRun，挨个执行 effect\n  effects.forEach(effect => {\n    effect()\n  })\n}\n```\n","source":"_posts/vue-3-0-学习记录.md","raw":"---\ntitle: vue 3.0 响应式系统学习记录\ndate: 2020-01-07 09:55:48\ntags: \ncover: img/lalafei.jpeg\n---\n#### 一、响应式系统实现过程: \n![RUNOOB 图标](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n#### 二、基本例子\nVue 3.0 的响应式系统是独立的模块，可以完全脱离 Vue 而使用，所以我们在 clone 了源码下来以后，可以直接在 `packages/reactivity` 模块下调试。\n1. 在项目根目录运行 `yarn dev reactivity`，然后进入 `packages/reactivity` 目录找到产出的 `dist/reactivity.global.js` 文件。\n2. 新建一个 `index.html`，写入如下代码：\n```\n<script src=\"./dist/reactivity.global.js\"></script>\n<script>\nconst { reactive, effect } = VueObserver\n\nconst origin = {\n  count: 0\n}\nconst state = reactive(origin)\n\nconst fn = () => {\n  const count = state.count\n  console.log(`set count to ${count}`)\n}\neffect(fn)\n</script>\n```\n3. 在浏览器打开该文件，于控制台执行 `state.count++`，便可看到输出 `set count to 1`。\n\n在上述的例子中，我们使用 `reactive()` 函数把 `origin` 对象转化成了 Proxy 对象 `state`；使用 `effect()` 函数把 `fn()` 作为响应式回调。当 `state.count` 发生变化时，便触发了 `fn()`。接下来我们将以这个例子结合上文的流程图，来讲解这套响应式系统是怎么运行的。\n\n#### 三、初始化阶段\n![vueInt](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b098adf?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n在初始化阶段，主要做了两件事。\n\n1. 把 `origin` 对象转化成响应式的 Proxy 对象 `state`。\n2. 把函数 `fn()` 作为一个响应式的 effect 函数。\n\n首先我们来分析第一件事。\n\n大家都知道，Vue 3.0 使用了 Proxy 来代替之前的 `Object.defineProperty()`，改写了对象的 getter/setter，完成依赖收集和响应触发。但是在这一阶段中，我们暂时先不管它是如何改写对象的 getter/setter 的，这个在后续的”依赖收集阶段“会详细说明。为了简单起见，我们可以把这部分的内容浓缩成一个只有两行代码的 `reactive()` 函数：\n\n```\nexport function reactive(target) {\n  const observed = new Proxy(target, handler)\n  return observed\n}\n复制代码\n```\n\n> 完整代码在 [reactive.js](https://github.com/jrainlau/tiny-reactive/blob/master/src/reactive.js)。这里的 `handler` 就是改造 getter/setter 的关键，我们放到后文讲解。\n\n接下来我们分析第二件事。\n\n当一个普通的函数 `fn()` 被 `effect()` 包裹之后，就会变成一个响应式的 effect 函数，而 `fn()` 也会被**立即执行一次**。\n\n**由于在 `fn()` 里面有引用到 Proxy 对象的属性，所以这一步会触发对象的 getter，从而启动依赖收集。**\n\n除此之外，这个 effect 函数也会被压入一个名为”activeReactiveEffectStack“（此处为 effectStack）的栈中，供后续依赖收集的时候使用。\n\n来看看代码（完成代码请看 [effect.js](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L47-L65)）：\n\n```\nexport function effect (fn) {\n  // 构造一个 effect\n  const effect = function effect(...args) {\n    return run(effect, fn, args)\n  }\n  // 立即执行一次\n  effect()\n  return effect\n}\n\nexport function run(effect, fn, args) {\n  if (effectStack.indexOf(effect) === -1) {\n    try {\n      // 往池子里放入当前 effect\n      effectStack.push(effect)\n      // 立即执行一遍 fn()\n      // fn() 执行过程会完成依赖收集，会用到 effect\n      return fn(...args)\n    } finally {\n      // 完成依赖收集后从池子中扔掉这个 effect\n      effectStack.pop()\n    }\n  }\n}\n```\n至此，初始化阶段已经完成。接下来就是整个系统最关键的一步——依赖收集阶段。\n\n#### 四、依赖收集阶段\n![vueDepen](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37c860761?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n这个阶段的触发时机，就是在 effect 被立即执行，其内部的 `fn()` 触发了 Proxy 对象的 getter 的时候。简单来说，只要执行到类似 `state.count` 的语句，就会触发 state 的 getter。\n\n依赖收集阶段最重要的目的，就是建立一份”依赖收集表“，也就是图示的”targetMap\"。targetMap 是一个 WeakMap，其 key 值是~~当前的 Proxy 对象 `state`~~代理前的对象`origin`，而 value 则是该对象所对应的 depsMap。\n\ndepsMap 是一个 Map，key 值为触发 getter 时的属性值（此处为 `count`），而 value 则是**触发过该属性值**所对应的各个 effect。\n\n还是有点绕？那么我们再举个例子。假设有个 Proxy 对象和 effect 如下：\n\n```\nconst state = reactive({\n  count: 0,\n  age: 18\n})\n\nconst effect1 = effect(() => {\n  console.log('effect1: ' + state.count)\n})\n\nconst effect2 = effect(() => {\n  console.log('effect2: ' + state.age)\n})\n\nconst effect3 = effect(() => {\n  console.log('effect3: ' + state.count, state.age)\n})\n复制代码\n```\n\n那么这里的 targetMap 应该为这个样子：\n\n![image](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37aa0f4c6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n这样，`{ target -> key -> dep }` 的对应关系就建立起来了，依赖收集也就完成了。[代码](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L4-L21)如下：\n\n```\nexport function track (target, operationType, key) {\n  const effect = effectStack[effectStack.length - 1]\n  if (effect) {\n    let depsMap = targetMap.get(target)\n    if (depsMap === void 0) {\n      targetMap.set(target, (depsMap = new Map()))\n    }\n\n    let dep = depsMap.get(key)\n    if (dep === void 0) {\n      depsMap.set(key, (dep = new Set()))\n    }\n\n    if (!dep.has(effect)) {\n      dep.add(effect)\n    }\n  }\n}\n\n复制代码\n```\n\n弄明白依赖收集表 targetMap 是非常重要的，因为这是整个响应式系统核心中的核心。\n\n#### 五、响应阶段\n\n回顾上一章节的例子，我们得到了一个 `{ count: 0, age: 18 }` 的 Proxy，并构造了三个 effect。在控制台上看看效果：\n\n![image](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37dadf75d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n效果符合预期，那么它是怎么实现的呢？首先来看看这个阶段的原理图：\n![vue 3 响应式系统原理](https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n当修改对象的某个属性值的时候，会触发对应的 setter。\n\nsetter 里面的 trigger() 函数会从依赖收集表里找到当前属性对应的各个 dep，然后把它们推入到 `effects` 和 `computedEffects（计算属性）` 队列中，最后通过 `scheduleRun()` 挨个执行里面的 effect。\n\n由于已经建立了依赖收集表，所以要找到属性所对应的 dep 也就轻而易举了，可以看看具体的[代码实现](https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L23-L45)：\n\n```\nexport function trigger (target, operationType, key) {\n  // 取得对应的 depsMap\n  const depsMap = targetMap.get(target)\n  if (depsMap === void 0) {\n    return\n  }\n  // 取得对应的各个 dep\n  const effects = new Set()\n  if (key !== void 0) {\n    const dep = depsMap.get(key)\n    dep && dep.forEach(effect => {\n      effects.add(effect)\n    })\n  }\n  // 简化版 scheduleRun，挨个执行 effect\n  effects.forEach(effect => {\n    effect()\n  })\n}\n```\n","slug":"vue-3-0-学习记录","published":1,"updated":"2020-01-08T02:31:37.253Z","_id":"ck5382pme00009bc997khewir","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"一、响应式系统实现过程\"><a href=\"#一、响应式系统实现过程\" class=\"headerlink\" title=\"一、响应式系统实现过程:\"></a>一、响应式系统实现过程:</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"RUNOOB 图标\"></p>\n<h4 id=\"二、基本例子\"><a href=\"#二、基本例子\" class=\"headerlink\" title=\"二、基本例子\"></a>二、基本例子</h4><p>Vue 3.0 的响应式系统是独立的模块，可以完全脱离 Vue 而使用，所以我们在 clone 了源码下来以后，可以直接在 <code>packages/reactivity</code> 模块下调试。</p>\n<ol>\n<li>在项目根目录运行 <code>yarn dev reactivity</code>，然后进入 <code>packages/reactivity</code> 目录找到产出的 <code>dist/reactivity.global.js</code> 文件。</li>\n<li>新建一个 <code>index.html</code>，写入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src&#x3D;&quot;.&#x2F;dist&#x2F;reactivity.global.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">const &#123; reactive, effect &#125; &#x3D; VueObserver</span><br><span class=\"line\"></span><br><span class=\"line\">const origin &#x3D; &#123;</span><br><span class=\"line\">  count: 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">const state &#x3D; reactive(origin)</span><br><span class=\"line\"></span><br><span class=\"line\">const fn &#x3D; () &#x3D;&gt; &#123;</span><br><span class=\"line\">  const count &#x3D; state.count</span><br><span class=\"line\">  console.log(&#96;set count to $&#123;count&#125;&#96;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">effect(fn)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>在浏览器打开该文件，于控制台执行 <code>state.count++</code>，便可看到输出 <code>set count to 1</code>。</li>\n</ol>\n<p>在上述的例子中，我们使用 <code>reactive()</code> 函数把 <code>origin</code> 对象转化成了 Proxy 对象 <code>state</code>；使用 <code>effect()</code> 函数把 <code>fn()</code> 作为响应式回调。当 <code>state.count</code> 发生变化时，便触发了 <code>fn()</code>。接下来我们将以这个例子结合上文的流程图，来讲解这套响应式系统是怎么运行的。</p>\n<h4 id=\"三、初始化阶段\"><a href=\"#三、初始化阶段\" class=\"headerlink\" title=\"三、初始化阶段\"></a>三、初始化阶段</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b098adf?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vueInt\"><br>在初始化阶段，主要做了两件事。</p>\n<ol>\n<li>把 <code>origin</code> 对象转化成响应式的 Proxy 对象 <code>state</code>。</li>\n<li>把函数 <code>fn()</code> 作为一个响应式的 effect 函数。</li>\n</ol>\n<p>首先我们来分析第一件事。</p>\n<p>大家都知道，Vue 3.0 使用了 Proxy 来代替之前的 <code>Object.defineProperty()</code>，改写了对象的 getter/setter，完成依赖收集和响应触发。但是在这一阶段中，我们暂时先不管它是如何改写对象的 getter/setter 的，这个在后续的”依赖收集阶段“会详细说明。为了简单起见，我们可以把这部分的内容浓缩成一个只有两行代码的 <code>reactive()</code> 函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function reactive(target) &#123;</span><br><span class=\"line\">  const observed &#x3D; new Proxy(target, handler)</span><br><span class=\"line\">  return observed</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>完整代码在 <a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/reactive.js\" target=\"_blank\" rel=\"noopener\">reactive.js</a>。这里的 <code>handler</code> 就是改造 getter/setter 的关键，我们放到后文讲解。</p>\n</blockquote>\n<p>接下来我们分析第二件事。</p>\n<p>当一个普通的函数 <code>fn()</code> 被 <code>effect()</code> 包裹之后，就会变成一个响应式的 effect 函数，而 <code>fn()</code> 也会被<strong>立即执行一次</strong>。</p>\n<p><strong>由于在 <code>fn()</code> 里面有引用到 Proxy 对象的属性，所以这一步会触发对象的 getter，从而启动依赖收集。</strong></p>\n<p>除此之外，这个 effect 函数也会被压入一个名为”activeReactiveEffectStack“（此处为 effectStack）的栈中，供后续依赖收集的时候使用。</p>\n<p>来看看代码（完成代码请看 <a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L47-L65\" target=\"_blank\" rel=\"noopener\">effect.js</a>）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function effect (fn) &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 构造一个 effect</span><br><span class=\"line\">  const effect &#x3D; function effect(...args) &#123;</span><br><span class=\"line\">    return run(effect, fn, args)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 立即执行一次</span><br><span class=\"line\">  effect()</span><br><span class=\"line\">  return effect</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export function run(effect, fn, args) &#123;</span><br><span class=\"line\">  if (effectStack.indexOf(effect) &#x3D;&#x3D;&#x3D; -1) &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 往池子里放入当前 effect</span><br><span class=\"line\">      effectStack.push(effect)</span><br><span class=\"line\">      &#x2F;&#x2F; 立即执行一遍 fn()</span><br><span class=\"line\">      &#x2F;&#x2F; fn() 执行过程会完成依赖收集，会用到 effect</span><br><span class=\"line\">      return fn(...args)</span><br><span class=\"line\">    &#125; finally &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 完成依赖收集后从池子中扔掉这个 effect</span><br><span class=\"line\">      effectStack.pop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至此，初始化阶段已经完成。接下来就是整个系统最关键的一步——依赖收集阶段。</p>\n<h4 id=\"四、依赖收集阶段\"><a href=\"#四、依赖收集阶段\" class=\"headerlink\" title=\"四、依赖收集阶段\"></a>四、依赖收集阶段</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37c860761?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vueDepen\"><br>这个阶段的触发时机，就是在 effect 被立即执行，其内部的 <code>fn()</code> 触发了 Proxy 对象的 getter 的时候。简单来说，只要执行到类似 <code>state.count</code> 的语句，就会触发 state 的 getter。</p>\n<p>依赖收集阶段最重要的目的，就是建立一份”依赖收集表“，也就是图示的”targetMap”。targetMap 是一个 WeakMap，其 key 值是<del>当前的 Proxy 对象 <code>state</code></del>代理前的对象<code>origin</code>，而 value 则是该对象所对应的 depsMap。</p>\n<p>depsMap 是一个 Map，key 值为触发 getter 时的属性值（此处为 <code>count</code>），而 value 则是<strong>触发过该属性值</strong>所对应的各个 effect。</p>\n<p>还是有点绕？那么我们再举个例子。假设有个 Proxy 对象和 effect 如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const state &#x3D; reactive(&#123;</span><br><span class=\"line\">  count: 0,</span><br><span class=\"line\">  age: 18</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect1 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect1: &#39; + state.count)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect2 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect2: &#39; + state.age)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect3 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect3: &#39; + state.count, state.age)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>那么这里的 targetMap 应该为这个样子：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37aa0f4c6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p>这样，<code>{ target -&gt; key -&gt; dep }</code> 的对应关系就建立起来了，依赖收集也就完成了。<a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L4-L21\" target=\"_blank\" rel=\"noopener\">代码</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function track (target, operationType, key) &#123;</span><br><span class=\"line\">  const effect &#x3D; effectStack[effectStack.length - 1]</span><br><span class=\"line\">  if (effect) &#123;</span><br><span class=\"line\">    let depsMap &#x3D; targetMap.get(target)</span><br><span class=\"line\">    if (depsMap &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">      targetMap.set(target, (depsMap &#x3D; new Map()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    let dep &#x3D; depsMap.get(key)</span><br><span class=\"line\">    if (dep &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">      depsMap.set(key, (dep &#x3D; new Set()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (!dep.has(effect)) &#123;</span><br><span class=\"line\">      dep.add(effect)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>弄明白依赖收集表 targetMap 是非常重要的，因为这是整个响应式系统核心中的核心。</p>\n<h4 id=\"五、响应阶段\"><a href=\"#五、响应阶段\" class=\"headerlink\" title=\"五、响应阶段\"></a>五、响应阶段</h4><p>回顾上一章节的例子，我们得到了一个 <code>{ count: 0, age: 18 }</code> 的 Proxy，并构造了三个 effect。在控制台上看看效果：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37dadf75d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p>效果符合预期，那么它是怎么实现的呢？首先来看看这个阶段的原理图：<br><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vue 3 响应式系统原理\"><br>当修改对象的某个属性值的时候，会触发对应的 setter。</p>\n<p>setter 里面的 trigger() 函数会从依赖收集表里找到当前属性对应的各个 dep，然后把它们推入到 <code>effects</code> 和 <code>computedEffects（计算属性）</code> 队列中，最后通过 <code>scheduleRun()</code> 挨个执行里面的 effect。</p>\n<p>由于已经建立了依赖收集表，所以要找到属性所对应的 dep 也就轻而易举了，可以看看具体的<a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L23-L45\" target=\"_blank\" rel=\"noopener\">代码实现</a>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function trigger (target, operationType, key) &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 取得对应的 depsMap</span><br><span class=\"line\">  const depsMap &#x3D; targetMap.get(target)</span><br><span class=\"line\">  if (depsMap &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">    return</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 取得对应的各个 dep</span><br><span class=\"line\">  const effects &#x3D; new Set()</span><br><span class=\"line\">  if (key !&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">    const dep &#x3D; depsMap.get(key)</span><br><span class=\"line\">    dep &amp;&amp; dep.forEach(effect &#x3D;&gt; &#123;</span><br><span class=\"line\">      effects.add(effect)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 简化版 scheduleRun，挨个执行 effect</span><br><span class=\"line\">  effects.forEach(effect &#x3D;&gt; &#123;</span><br><span class=\"line\">    effect()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一、响应式系统实现过程\"><a href=\"#一、响应式系统实现过程\" class=\"headerlink\" title=\"一、响应式系统实现过程:\"></a>一、响应式系统实现过程:</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"RUNOOB 图标\"></p>\n<h4 id=\"二、基本例子\"><a href=\"#二、基本例子\" class=\"headerlink\" title=\"二、基本例子\"></a>二、基本例子</h4><p>Vue 3.0 的响应式系统是独立的模块，可以完全脱离 Vue 而使用，所以我们在 clone 了源码下来以后，可以直接在 <code>packages/reactivity</code> 模块下调试。</p>\n<ol>\n<li>在项目根目录运行 <code>yarn dev reactivity</code>，然后进入 <code>packages/reactivity</code> 目录找到产出的 <code>dist/reactivity.global.js</code> 文件。</li>\n<li>新建一个 <code>index.html</code>，写入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src&#x3D;&quot;.&#x2F;dist&#x2F;reactivity.global.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">const &#123; reactive, effect &#125; &#x3D; VueObserver</span><br><span class=\"line\"></span><br><span class=\"line\">const origin &#x3D; &#123;</span><br><span class=\"line\">  count: 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">const state &#x3D; reactive(origin)</span><br><span class=\"line\"></span><br><span class=\"line\">const fn &#x3D; () &#x3D;&gt; &#123;</span><br><span class=\"line\">  const count &#x3D; state.count</span><br><span class=\"line\">  console.log(&#96;set count to $&#123;count&#125;&#96;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">effect(fn)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>在浏览器打开该文件，于控制台执行 <code>state.count++</code>，便可看到输出 <code>set count to 1</code>。</li>\n</ol>\n<p>在上述的例子中，我们使用 <code>reactive()</code> 函数把 <code>origin</code> 对象转化成了 Proxy 对象 <code>state</code>；使用 <code>effect()</code> 函数把 <code>fn()</code> 作为响应式回调。当 <code>state.count</code> 发生变化时，便触发了 <code>fn()</code>。接下来我们将以这个例子结合上文的流程图，来讲解这套响应式系统是怎么运行的。</p>\n<h4 id=\"三、初始化阶段\"><a href=\"#三、初始化阶段\" class=\"headerlink\" title=\"三、初始化阶段\"></a>三、初始化阶段</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b098adf?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vueInt\"><br>在初始化阶段，主要做了两件事。</p>\n<ol>\n<li>把 <code>origin</code> 对象转化成响应式的 Proxy 对象 <code>state</code>。</li>\n<li>把函数 <code>fn()</code> 作为一个响应式的 effect 函数。</li>\n</ol>\n<p>首先我们来分析第一件事。</p>\n<p>大家都知道，Vue 3.0 使用了 Proxy 来代替之前的 <code>Object.defineProperty()</code>，改写了对象的 getter/setter，完成依赖收集和响应触发。但是在这一阶段中，我们暂时先不管它是如何改写对象的 getter/setter 的，这个在后续的”依赖收集阶段“会详细说明。为了简单起见，我们可以把这部分的内容浓缩成一个只有两行代码的 <code>reactive()</code> 函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function reactive(target) &#123;</span><br><span class=\"line\">  const observed &#x3D; new Proxy(target, handler)</span><br><span class=\"line\">  return observed</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>完整代码在 <a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/reactive.js\" target=\"_blank\" rel=\"noopener\">reactive.js</a>。这里的 <code>handler</code> 就是改造 getter/setter 的关键，我们放到后文讲解。</p>\n</blockquote>\n<p>接下来我们分析第二件事。</p>\n<p>当一个普通的函数 <code>fn()</code> 被 <code>effect()</code> 包裹之后，就会变成一个响应式的 effect 函数，而 <code>fn()</code> 也会被<strong>立即执行一次</strong>。</p>\n<p><strong>由于在 <code>fn()</code> 里面有引用到 Proxy 对象的属性，所以这一步会触发对象的 getter，从而启动依赖收集。</strong></p>\n<p>除此之外，这个 effect 函数也会被压入一个名为”activeReactiveEffectStack“（此处为 effectStack）的栈中，供后续依赖收集的时候使用。</p>\n<p>来看看代码（完成代码请看 <a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L47-L65\" target=\"_blank\" rel=\"noopener\">effect.js</a>）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function effect (fn) &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 构造一个 effect</span><br><span class=\"line\">  const effect &#x3D; function effect(...args) &#123;</span><br><span class=\"line\">    return run(effect, fn, args)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 立即执行一次</span><br><span class=\"line\">  effect()</span><br><span class=\"line\">  return effect</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export function run(effect, fn, args) &#123;</span><br><span class=\"line\">  if (effectStack.indexOf(effect) &#x3D;&#x3D;&#x3D; -1) &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 往池子里放入当前 effect</span><br><span class=\"line\">      effectStack.push(effect)</span><br><span class=\"line\">      &#x2F;&#x2F; 立即执行一遍 fn()</span><br><span class=\"line\">      &#x2F;&#x2F; fn() 执行过程会完成依赖收集，会用到 effect</span><br><span class=\"line\">      return fn(...args)</span><br><span class=\"line\">    &#125; finally &#123;</span><br><span class=\"line\">      &#x2F;&#x2F; 完成依赖收集后从池子中扔掉这个 effect</span><br><span class=\"line\">      effectStack.pop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至此，初始化阶段已经完成。接下来就是整个系统最关键的一步——依赖收集阶段。</p>\n<h4 id=\"四、依赖收集阶段\"><a href=\"#四、依赖收集阶段\" class=\"headerlink\" title=\"四、依赖收集阶段\"></a>四、依赖收集阶段</h4><p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37c860761?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vueDepen\"><br>这个阶段的触发时机，就是在 effect 被立即执行，其内部的 <code>fn()</code> 触发了 Proxy 对象的 getter 的时候。简单来说，只要执行到类似 <code>state.count</code> 的语句，就会触发 state 的 getter。</p>\n<p>依赖收集阶段最重要的目的，就是建立一份”依赖收集表“，也就是图示的”targetMap”。targetMap 是一个 WeakMap，其 key 值是<del>当前的 Proxy 对象 <code>state</code></del>代理前的对象<code>origin</code>，而 value 则是该对象所对应的 depsMap。</p>\n<p>depsMap 是一个 Map，key 值为触发 getter 时的属性值（此处为 <code>count</code>），而 value 则是<strong>触发过该属性值</strong>所对应的各个 effect。</p>\n<p>还是有点绕？那么我们再举个例子。假设有个 Proxy 对象和 effect 如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const state &#x3D; reactive(&#123;</span><br><span class=\"line\">  count: 0,</span><br><span class=\"line\">  age: 18</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect1 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect1: &#39; + state.count)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect2 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect2: &#39; + state.age)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">const effect3 &#x3D; effect(() &#x3D;&gt; &#123;</span><br><span class=\"line\">  console.log(&#39;effect3: &#39; + state.count, state.age)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>那么这里的 targetMap 应该为这个样子：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37aa0f4c6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p>这样，<code>{ target -&gt; key -&gt; dep }</code> 的对应关系就建立起来了，依赖收集也就完成了。<a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L4-L21\" target=\"_blank\" rel=\"noopener\">代码</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function track (target, operationType, key) &#123;</span><br><span class=\"line\">  const effect &#x3D; effectStack[effectStack.length - 1]</span><br><span class=\"line\">  if (effect) &#123;</span><br><span class=\"line\">    let depsMap &#x3D; targetMap.get(target)</span><br><span class=\"line\">    if (depsMap &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">      targetMap.set(target, (depsMap &#x3D; new Map()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    let dep &#x3D; depsMap.get(key)</span><br><span class=\"line\">    if (dep &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">      depsMap.set(key, (dep &#x3D; new Set()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (!dep.has(effect)) &#123;</span><br><span class=\"line\">      dep.add(effect)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>弄明白依赖收集表 targetMap 是非常重要的，因为这是整个响应式系统核心中的核心。</p>\n<h4 id=\"五、响应阶段\"><a href=\"#五、响应阶段\" class=\"headerlink\" title=\"五、响应阶段\"></a>五、响应阶段</h4><p>回顾上一章节的例子，我们得到了一个 <code>{ count: 0, age: 18 }</code> 的 Proxy，并构造了三个 effect。在控制台上看看效果：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37dadf75d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p>效果符合预期，那么它是怎么实现的呢？首先来看看这个阶段的原理图：<br><img src=\"https://user-gold-cdn.xitu.io/2019/10/9/16dafca37b2e0534?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"vue 3 响应式系统原理\"><br>当修改对象的某个属性值的时候，会触发对应的 setter。</p>\n<p>setter 里面的 trigger() 函数会从依赖收集表里找到当前属性对应的各个 dep，然后把它们推入到 <code>effects</code> 和 <code>computedEffects（计算属性）</code> 队列中，最后通过 <code>scheduleRun()</code> 挨个执行里面的 effect。</p>\n<p>由于已经建立了依赖收集表，所以要找到属性所对应的 dep 也就轻而易举了，可以看看具体的<a href=\"https://github.com/jrainlau/tiny-reactive/blob/master/src/effect.js#L23-L45\" target=\"_blank\" rel=\"noopener\">代码实现</a>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function trigger (target, operationType, key) &#123;</span><br><span class=\"line\">  &#x2F;&#x2F; 取得对应的 depsMap</span><br><span class=\"line\">  const depsMap &#x3D; targetMap.get(target)</span><br><span class=\"line\">  if (depsMap &#x3D;&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">    return</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 取得对应的各个 dep</span><br><span class=\"line\">  const effects &#x3D; new Set()</span><br><span class=\"line\">  if (key !&#x3D;&#x3D; void 0) &#123;</span><br><span class=\"line\">    const dep &#x3D; depsMap.get(key)</span><br><span class=\"line\">    dep &amp;&amp; dep.forEach(effect &#x3D;&gt; &#123;</span><br><span class=\"line\">      effects.add(effect)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#x2F;&#x2F; 简化版 scheduleRun，挨个执行 effect</span><br><span class=\"line\">  effects.forEach(effect &#x3D;&gt; &#123;</span><br><span class=\"line\">    effect()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"css布局方式汇总","date":"2020-01-08T01:33:39.000Z","cover":"img/ffBg.jpg","_content":"### 一、水平居中 \n\n#####  (1)文本/行内元素/行内块级元素▲ \n\n原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐\n\n```\n#parent{\n    text-align: center;\n}\n```\n\n优缺点\n\n- 优点：简单快捷，容易理解，兼容性非常好\n- 缺点：只对行内内容有效；属性会继承影响到后代行内内容；如果子元素宽度大于父元素宽度则无效，只有后代行内内容中宽度小于设置text-align属性的元素宽度的时候，才会水平居中\n\n#####  (2)单个块级元素▲ \n\n原理：根据[规范](https://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins)介绍得很清楚了，有这么一种情况：在margin有节余的同时如果左右margin设置了auto，将会均分剩余空间。另外，如果上下的margin设置了auto，其计算值为0\n\n```\n#son{\n    width: 100px; /*必须定宽*/\n    margin: 0 auto;\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：必须定宽，并且值不能为auto；宽度要小于父元素，否则无效\n\n#####  (3)多个块级元素 \n\n原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐\n\n```\n#parent{\n    text-align: center;\n}\n.son{\n    display: inline-block; /*改为行内或者行内块级形式，以达到text-align对其生效*/\n}\n```\n\n优缺点\n\n- 优点：简单，容易理解，兼容性非常好\n- 缺点：只对行内内容有效；属性会继承影响到后代行内内容；块级改为inline-block换行、空格会产生元素间隔\n\n#####  (4)使用绝对定位实现▲ \n\n原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的\n\n```\n#parent{\n    height: 200px;\n    width: 200px;  /*定宽*/\n    position: relative;  /*父相*/\n    background-color: #f00;\n}\n#son{\n    position: absolute;  /*子绝*/\n    left: 50%;  /*父元素宽度一半,这里等同于left:100px*/\n    transform: translateX(-50%);  /*自身宽度一半,等同于margin-left: -50px;*/\n    width: 100px;  /*定宽*/\n    height: 100px;\n    background-color: #00ff00;\n}\n```\n\n优缺点\n\n- 优点：使用margin-left兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin-left需要知道宽度值；使用transform兼容性不好（ie9+）\n\n#####  (5)任意个元素(flex) \n\n原理：就是设置当前主轴对齐方式为居中。说不上为什么，flex无非就是主轴侧轴是重点，然后就是排列方式的设置，可以去看看文末的flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    justify-content: center;\n}\n```\n\n优缺点\n\n- 优点：功能强大；简单方便；容易理解\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  本章小结：\n\n- 对于水平居中，我们应该先考虑，哪些元素有自带的居中效果，最先想到的应该就是 `text-align:center` 了，但是这个只对行内内容有效，所以我们要使用 `text-align:center` 就必须将子元素设置为 `display: inline;` 或者 `display: inline-block;` ；\n- 其次就是考虑能不能用`margin: 0 auto;` ，因为这都是一两句代码能搞定的事，实在不行就是用绝对定位去实现了。\n- 移动端能用flex就用flex，简单方便，灵活并且功能强大，无愧为网页布局的一大利器！\n\n###  二、垂直居中 \n\n*一,二,三章都是parent+son的简单结构,html代码和效果图就不贴出来了,第四章以后才有*\n\n#####  (1)单行文本/行内元素/行内块级元素▲ \n\n原理：line-height的最终表现是通过inline box实现的，而无论inline box所占据的高度是多少（无论比文字大还是比文字小），其占据的空间都是与文字内容公用水平中垂线的。\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;  /*与height等值*/\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：只能用于单行行内内容；要知道高度的值\n\n#####  (2)多行文本/行内元素/行内块级元素 \n\n原理同上\n\n```\n#parent{  /*或者用span把所有文字包裹起来，设置display：inline-block转换成图片的方式解决*/\n    height: 150px;\n    line-height: 30px;  /*元素在页面呈现为5行,则line-height的值为height/5*/\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：只能用于行内内容；需要知道高度和最终呈现多少行来计算出line-height的值，建议用span包裹多行文本\n\n#####  (3)图片▲ \n\n原理：[vertical-align和line-height的基友关系](http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/)\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;\n    font-size: 0;\n}\nimg#son{vertical-align: middle;} /*默认是基线对齐，改为middle*/\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：需要添加font-size: 0; 才可以完全的垂直居中；不过需要主要，html#parent包裹img之间需要有换行或空格\n\n#####  (4)单个块级元素 \n\nhtml代码:\n\n```\n<div id=\"parent\">\n    <div id=\"son\"></div>\n</div>\n```\n\n######  (4-1) 使用tabel-cell实现: \n\n原理：CSS Table，使表格内容对齐方式为middle\n\n```\n#parent{\n    display: table-cell;\n    vertical-align: middle;\n}\n```\n\n优缺点\n\n- 优点：简单；宽高不定；兼容性好（ie8+）\n- 缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置display: table; 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素\n\n######  (4-2) 使用绝对定位实现:▲ \n\n```\n/*原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的*/\n#parent{\n    height: 150px;\n    position: relative;  /*父相*/\n}\n#son{\n    position: absolute;  /*子绝*/\n    top: 50%;  /*父元素高度一半,这里等同于top:75px;*/\n    transform: translateY(-50%);  /*自身高度一半,这里等同于margin-top:-25px;*/\n    height: 50px;\n}\n\n/*优缺点\n- 优点：使用margin-top兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin-top需要知道高度值；使用transform兼容性不好（ie9+）*/\n\n或\n\n/*原理：当top、bottom为0时,margin-top&bottom会无限延伸占满空间并且平分*/\n#parent{position: relative;}\n#son{\n    position: absolute;\n    margin: auto 0;\n    top: 0;\n    bottom: 0;\n    height: 50px;\n}\n\n/*优缺点\n- 优点：简单;兼容性较好(ie8+)\n- 缺点：脱离文档流*/\n```\n\n######  (4-3) 使用flex实现: \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    align-items: center;\n}\n\n或\n\n#parent{display: flex;}\n#son{align-self: center;}\n\n或\n/*原理：这个尚未搞清楚，应该是flex使margin上下边界无限延伸至剩余空间并平分了*/\n#parent{display: flex;}\n#son{margin: auto 0;}\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  (5)任意个元素(flex) \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    align-items: center;\n}\n\n或\n\n#parent{\n    display: flex;\n}\n.son{\n    align-self: center;\n}\n\n或 \n\n#parent{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  ★本章小结：\n\n- 对于垂直居中，最先想到的应该就是 `line-height` 了，但是这个只能用于行内内容；\n- 其次就是考虑能不能用`vertical-align: middle;` ，不过这个一定要熟知原理才能用得顺手，建议看下[vertical-align和line-height的基友关系](http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/) ；\n- 然后便是绝对定位，虽然代码多了点，但是胜在适用于不同情况；\n- 移动端兼容性允许的情况下能用flex就用flex\n\n###  三、水平垂直居中 \n\n#####  (1)行内/行内块级/图片▲ \n\n原理：`text-align: center;` 控制行内内容相对于块父元素水平居中,然后就是`line-height`和`vertical-align`的基友关系使其垂直居中，`font-size: 0;` 是为了消除近似居中的bug\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;  /*行高的值与height相等*/\n    text-align: center;\n    font-size: 0;   /*消除幽灵空白节点的bug*/\n}\n#son{\n    /*display: inline-block;*/  /*如果是块级元素需改为行内或行内块级才生效*/\n    vertical-align: middle;\n}\n```\n\n优缺点\n\n- 优点：代码简单；兼容性好（ie8+）\n- 缺点：只对行内内容有效；需要添加`font-size: 0;` 才可以完全的垂直居中；不过需要注意html中#parent包裹#son之间需要有换行或空格；熟悉`line-height`和`vertical-align`的基友关系较难\n\n#####  (2)table-cell \n\n原理：CSS Table，使表格内容垂直对齐方式为middle,然后根据是行内内容还是块级内容采取不同的方式达到水平居中\n\n```\n#parent{\n    height: 150px;\n    width: 200px;\n    display: table-cell;\n    vertical-align: middle;\n    /*text-align: center;*/   /*如果是行内元素就添加这个*/\n}\n#son{\n    /*margin: 0 auto;*/    /*如果是块级元素就添加这个*/\n    width: 100px;\n    height: 50px;\n}\n```\n\n优缺点\n\n- 优点：简单；适用于宽度高度未知情况；兼容性好（ie8+）\n- 缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置`display: table;` 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素\n\n#####  (3)button作为父元素 \n\n原理：button的默认样式，再把需要居中的元素表现形式改为行内或行内块级就好\n\n```\nbutton#parent{  /*改掉button默认样式就好了,不需要居中处理*/\n    height: 150px;\n    width: 200px;\n    outline: none;  \n    border: none;\n}\n#son{\n    display: inline-block; /*button自带text-align: center,改为行内水平居中生效*/\n}\n```\n\n优缺点\n\n- 优点：简单方便，充分利用默认样式\n- 缺点：只适用于行内内容；需要清除部分默认样式；水平垂直居中兼容性很好，但是ie下点击会有凹陷效果！\n\n#####  (4)绝对定位 \n\n原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到几何上的水平垂直居中\n\n```\n#parent{\n    position: relative;\n}\n#son{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    /*定宽高时等同于margin-left:负自身宽度一半;margin-top:负自身高度一半;*/\n    transform: translate(-50%,-50%); \n}\n```\n\n优缺点\n\n- 优点：使用margin兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin需要知道宽高；使用transform兼容性不好（ie9+）\n\n#####  (5)绝对居中 \n\n原理：当top、bottom为0时,margin-top&bottom设置auto的话会无限延伸占满空间并且平分；当left、right为0时,margin-left&right设置auto的话会无限延伸占满空间并且平分\n\n```\n#parent{\n    position: relative;\n}\n#son{\n    position: absolute;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n```\n\n优缺点\n\n- 优点：无需关注宽高；兼容性较好(ie8+)\n- 缺点：代码较多；脱离文档流\n\n#####  (6)flex \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n}\n#son{\n    margin: auto;\n}\n\n或\n\n#parent{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n或\n\n#parent{\n    display: flex;\n    justify-content: center;\n}\n#son{\n    align-self: center;\n}\n复制代码\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  (7)视窗居中 \n\n原理：vh为视口单位，视口即文档可视的部分，50vh就是视口高度的50/100，设置50vh上边距再\n\n```\n#son{\n\t/*0如果去掉，则会多出滚动条并且上下都是50vh的margin。如果去掉就给body加上overflow:hidden;*/\n    margin: 50vh auto 0;  \n    transform: translateY(-50%);\n}\n```\n\n优缺点\n\n- 优点：简单；容易理解；两句代码达到屏幕水平垂直居中\n- 缺点：兼容性不好（ie9+，Android4.4+）\n\n#####  ★本章小结：\n\n- 一般情况下，水平垂直居中，我们最常用的就是绝对定位加负边距了，缺点就是需要知道宽高，使用transform倒是可以不需要，但是兼容性不好（ie9+）；\n- 其次就是绝对居中，绝对定位设置top、left、right、bottom为0，然后`margin:auto;` 让浏览器自动平分边距以达到水平垂直居中的目的；\n- 如果是行内/行内块级/图片这些内容，可以优先考虑`line-height`和`vertical-align` 结合使用，不要忘了还有`text-align` ，这个方法代码其实不多，就是理解原理有点困难，想要熟练应对各种情况还需好好研究；\n- 移动端兼容性允许的情况下能用flex就用flex。\n\n###  四、两列布局 \n\n####  4.1 左列定宽,右列自适应 \n\n#####  (1)利用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right\">右列自适应</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    background-color: #0f0;\n    height: 500px;\n    margin-left: 100px; /*大于等于#left的宽度*/\n}\n复制代码\n```\n\n#####  (2)利用float+margin(fix)实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right-fix\">\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right-fix {\n    float: right;\n    width: 100%;\n    margin-left: -100px; /*正值大于或等于#left的宽度,才能显示在同一行*/\n}\n#right{\n    margin-left: 100px; /*大于或等于#left的宽度*/\n    background-color: #0f0;\n    height: 500px;\n}\n复制代码\n```\n\n#####  (3)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right\">右列自适应</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    background-color: #0f0;\n    height: 500px;\n    overflow: hidden; /*触发bfc达到自适应*/\n}\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (4)使用table实现 \n\nhtml代码:\n\n```\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    display: table;\n    height: 500px;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n#left,#right{\n    display: table-cell;  /*利用单元格自动分配宽度*/\n}\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (5)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    position: relative;  /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #f00;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    position: absolute;\n    top: 0;\n    left: 100px;  /*值大于等于#left的宽度*/\n    right: 0;\n    background-color: #0f0;\n    height: 500px;\n}\n```\n\n#####  (6)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    height: 500px;\n    display: flex;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#right {\n    flex: 1; /*均分了父元素剩余空间*/\n    background-color: #0f0;\n}\n```\n\n#####  (7)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px auto;  /*设定2列就ok了,auto换成1fr也行*/\n}\n#left {\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  4.2 左列自适应,右列定宽 \n\n效果:\n\n\n#####  (1)使用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    height: 500px;\n    padding-left: 100px;  /*抵消#left的margin-left以达到#parent水平居中*/\n}\n#left {\n    width: 100%;\n    height: 500px;\n    float: left;\n    margin-left: -100px; /*正值等于#right的宽度*/\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    width: 100px;\n    float: right;\n    background-color: #0f0;\n}\n\n```\n\n#####  (2)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"right\">右列定宽</div>\n    <div id=\"left\">左列自适应</div>   <!--顺序要换一下-->\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#left {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    margin-left: 10px;  /*margin需要定义在#right中*/\n    float: right;\n    width: 100px;\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (3)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n#left {\n    background-color: #f00;\n    display: table-cell;\n}\n#right {\n    width: 100px;\n    background-color: #0f0;\n    display: table-cell;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (4)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    position: relative;  /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 100px;  /*大于等于#rigth的宽度*/\n    background-color: #f00;\n    height: 500px;\n}\n#right {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: #0f0;\n    width: 100px;\n    height: 500px;\n}\n\n```\n\n#####  (5)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    height: 500px;\n    display: flex;\n}\n#left {\n    flex: 1;\n    background-color: #f00;\n}\n#right {\n    width: 100px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (6)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: auto 100px;  /*设定2列,auto换成1fr也行*/\n}\n#left {\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  4.3 一列不定,一列自适应 \n\n(盒子宽度随着内容增加或减少发生变化,另一个盒子自适应)\n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1676e57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n变化后:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d19c5afc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#left {\n    margin-right: 10px;\n    float: left;  /*只设置浮动,不设宽度*/\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    display: flex;\n}\n#left { /*不设宽度*/\n    margin-right: 10px;\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    background-color: #0f0;\n    flex: 1;  /*均分#parent剩余的部分*/\n}\n\n```\n\n#####  (3)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    display: grid;\n    grid-template-columns: auto 1fr;  /*auto和1fr换一下顺序就是左列自适应,右列不定宽了*/\n}\n#left {\n    margin-right: 10px;\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n*左列自适应,右列不定宽同理(参考4.1和4.3对应代码示例)*\n\n###  五、三列布局 \n\n####  5.1 两列定宽,一列自适应 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1ea53c5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    min-width: 310px; /*100+10+200,防止宽度不够,子元素换行*/\n}\n#left {\n    margin-right: 10px;  /*#left和#center间隔*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center{\n    float: left;\n    width: 200px;\n    height: 500px;\n    background-color: #eeff2b;\n}\n#right {\n    margin-left: 320px;  /*等于#left和#center的宽度之和加上间隔,多出来的就是#right和#center的间隔*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (2)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    min-width: 320px; /*100+10+200+20,防止宽度不够,子元素换行*/\n}\n#left {\n    margin-right: 10px; /*间隔*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center{\n    margin-right: 10px; /*在此定义和#right的间隔*/\n    float: left;\n    width: 200px;\n    height: 500px;\n    background-color: #eeff2b;\n}\n#right {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (3)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%; \n    height: 520px; /*抵消上下间距10*2的高度影响*/\n    margin: -10px 0;  /*抵消上下边间距10的位置影响*/\n    display: table;\n    /*左右两边间距大了一点,子元素改用padding设置盒子间距就没有这个问题*/\n    border-spacing: 10px;  /*关键!!!设置间距*/\n}\n#left {\n    display: table-cell;\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    display: table-cell;\n    width: 200px;\n    background-color: #eeff2b;\n}\n#right {\n    display: table-cell;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (4)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n#left {\n    margin-right: 10px;  /*间距*/\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    margin-right: 10px;  /*间距*/\n    width: 200px;\n    background-color: #eeff2b;\n}\n#right {\n    flex: 1;  /*均分#parent剩余的部分达到自适应*/\n    background-color: #0f0;\n}\n\n```\n\n#####  (5)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px 200px auto; /*设置3列,固定第一第二列的宽度,第三列auto或者1fr*/\n}\n#left {\n    margin-right: 10px;  /*间距*/\n    background-color: #f00;\n}\n#center {\n    margin-right: 10px;  /*间距*/\n    background-color: #eeff2b;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  5.2 两侧定宽,中间自适应 \n\n#####  5.2.1 双飞翼布局方法 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1cc24f8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"header\"></div>\n<!--中间栏需要放在前面-->\n<div id=\"parent\">\n    <div id=\"center\">\n        <div id=\"center_inbox\">中间自适应</div>\n        <hr>  <!--方便观察原理-->\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n<div id=\"footer\"></div>\n</body>\n\n```\n\ncss代码:\n\n```\n#header {\n    height: 60px;\n    background-color: #ccc;\n}\n#left {\n    float: left;\n    width: 100px;\n    height: 500px;\n    margin-left: -100%; /*调整#left的位置,值等于自身宽度*/\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    height: 500px;\n    float: left;\n    width: 100%;\n    background-color: #eeff2b;\n}\n#center_inbox{\n    height: 480px;\n    border: 1px solid #000;\n    margin: 0 220px 0 120px;  /*关键!!!左右边界等于左右盒子的宽度,多出来的为盒子间隔*/\n}\n#right {\n    float: left;\n    width: 200px;\n    height: 500px;\n    margin-left: -200px;  /*使right到指定的位置,值等于自身宽度*/\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer {\n    clear: both;  /*注意清除浮动!!*/\n    height: 60px;\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.2 圣杯布局方法 \n\n\nhtml代码:\n\n```\n<body>\n<div id=\"header\"></div>\n<div id=\"parent\">\n    <!--#center需要放在前面-->\n    <div id=\"center\">中间自适应\n        <hr>\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n<div id=\"footer\"></div>\n</body>\n\n```\n\ncss代码:\n\n```\n#header{\n    height: 60px;\n    background-color: #ccc;\n}\n#parent {\n    box-sizing: border-box;\n    height: 500px;\n    padding: 0 215px 0 115px;  /*为了使#center摆正,左右padding分别等于左右盒子的宽,可以结合左右盒子相对定位的left调整间距*/\n}\n#left {\n    margin-left: -100%;  /*使#left上去一行*/\n    position: relative;\n    left: -115px;  /*相对定位调整#left的位置,正值大于或等于自身宽度*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    float: left;\n    width: 100%;  /*由于#parent的padding,达到自适应的目的*/\n    height: 500px;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    background-color: #eeff2b;\n}\n#right {\n    position: relative;\n    left: 215px; /*相对定位调整#right的位置,大于或等于自身宽度*/\n    width: 200px;\n    height: 500px;\n    margin-left: -200px;  /*使#right上去一行*/\n    float: left;\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer{\n    height: 60px;\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.3 使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"header\"></div>\n    <!--#center需要放在前面-->\n    <div id=\"center\">中间自适应\n        <hr>\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n    <div id=\"footer\"></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px auto 200px; /*设定3列*/\n    grid-template-rows: 60px auto 60px; /*设定3行*/\n    /*设置网格区域分布*/\n    grid-template-areas: \n        \"header header header\" \n        \"leftside main rightside\" \n        \"footer footer footer\";\n}\n#header {\n    grid-area: header; /*指定在哪个网格区域*/\n    background-color: #ccc;\n}\n#left {\n    grid-area: leftside;\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    grid-area: main; /*指定在哪个网格区域*/\n    margin: 0 15px; /*设置间隔*/\n    border: 1px solid #000;\n    background-color: #eeff2b;\n}\n#right {\n    grid-area: rightside; /*指定在哪个网格区域*/\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer {\n    grid-area: footer; /*指定在哪个网格区域*/\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.4 其他方法 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136f71b55c0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n#left {\n    display: table-cell;\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    display: table-cell;\n    background-color: #eeff2b;\n}\n#right {\n    display: table-cell;\n    width: 200px;\n    background-color: #0f0;\n}\n\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简洁，容易理解；\n- 缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    flex: 1;  /*均分#parent剩余的部分*/\n    background-color: #eeff2b;\n}\n#right {\n    width: 200px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (3)使用position实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    position: relative; /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center {\n    height: 500px;\n    margin-left: 100px; /*大于等于#left的宽度,或者给#parent添加同样大小的padding-left*/\n    margin-right: 200px;  /*大于等于#right的宽度,或者给#parent添加同样大小的padding-right*/\n    background-color: #eeff2b;\n}\n#right {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 200px;\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：容易理解，兼容性比较好\n- 缺点：需手动计算宽度确定边距；脱离文档流；代码繁多\n\n###  六、多列布局 \n\n####  6.1 等宽布局 \n\n#####  6.1.1 四列等宽 \n\n#####  (1)使用float实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136f835236f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    margin-left: -20px; /*使整体内容看起来居中,抵消padding-left的影响*/\n}\n.column{\n    padding-left: 20px;  /*盒子的边距*/\n    width: 25%;\n    float: left;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    background-clip: content-box; /*背景色从内容开始绘制,方便观察*/\n    height: 500px;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；兼容性较好\n- 缺点：需要手动清除浮动，否则会产生高度塌陷\n\n#####  (2)使用table实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136ffc5df62?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 540px;  /*抵消上下边20*2间距的高度影响*/\n    display: table;\n    margin: -20px 0;  /*抵消上下边20*2间距的位置影响*/\n    /*两边离页面间距较大,改用子元素设置padding来当成间隔就不会有这样的问题*/\n    border-spacing: 20px;  /*设置间距*/\n}\n.column{\n    display: table-cell;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；无需关注宽度，单元格自动等分\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (3)使用flex实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a137025dbc4c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    margin-left: -15px;  /*使内容看起来居中*/\n    height: 500px;\n    display: flex;\n}\n.column{\n    flex: 1; /*一起平分#parent*/\n    margin-left: 15px; /*设置间距*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n#####  多列等宽 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a137120f99b7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n}\n.column{\n    float: left;  /*添加浮动*/\n    width: 16.66666666666667%;  /*100÷列数,得出百分比*/\n    height: 500px;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；兼容性较好\n- 缺点：需要手动清除浮动，否则会产生高度塌陷\n\n#####  (2)使用table实现 \n\nhtml代码\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n.column{\n    display: table-cell; /*无需关注列数,单元格自动平分*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；无需关注宽度。单元格自动等分\n- 缺点：margin失效；设置间隔比较麻烦；不兼容ie8-\n\n#####  (3)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n.column{\n    flex: 1;  /*无需关注列数,一起平分#parent*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n#####  (4)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: repeat(6,1fr);  /*6就是列数*/\n}\n.column{}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n####  6.2 九宫格布局 \n\n#####  (1)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"row\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n        <div class=\"item\">6</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">7</div>\n        <div class=\"item\">8</div>\n        <div class=\"item\">9</div>\n    </div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: table;\n}\n.row {\n    display: table-row;\n}\n.item {\n    border: 1px solid #000;\n    display: table-cell;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简洁，容易理解；\n- 缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"row\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n        <div class=\"item\">6</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">7</div>\n        <div class=\"item\">8</div>\n        <div class=\"item\">9</div>\n    </div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n}\n.row {\n    display: flex;\n    flex: 1;\n}\n.item {\n    flex: 1;\n    border: 1px solid #000;\n}\n\n```\n\n#####  (3)使用Grid实现 \n\n*CSS Grid非常强大,可以实现各种各样的三维布局,可查阅本文结尾的阅读推荐*\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"item\">1</div>\n    <div class=\"item\">2</div>\n    <div class=\"item\">3</div>\n    <div class=\"item\">4</div>\n    <div class=\"item\">5</div>\n    <div class=\"item\">6</div>\n    <div class=\"item\">7</div>\n    <div class=\"item\">8</div>\n    <div class=\"item\">9</div>\n</div>\n</body>\n\n复制代码\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr); /*等同于1fr 1fr 1fr,此为重复的合并写法*/\n    grid-template-rows: repeat(3, 1fr);  /*等同于1fr 1fr 1fr,此为重复的合并写法*/\n}\n.item {\n    border: 1px solid #000;\n}\n\n```\n\n####  6.3 栅格系统 \n\n优缺点：\n\n- 优点：代码简洁，容易理解；提高页面内容的流动性，能适应多种设备；\n\n#####  (1)用Less生成 \n\n```\n/*生成栅格系统*/\n@media screen and (max-width: 768px){\n  .generate-columns(12);     /*此处设置生成列数*/\n  .generate-columns(@n, @i: 1) when (@i <= @n) {\n    .column-xs-@{i} {\n      width: (@i * 100% / @n);\n    }\n    .generate-columns(@n, (@i+1));\n  }\n}\n@media screen and (min-width: 768px){\n  .generate-columns(12);    /*此处设置生成列数*/\n  .generate-columns(@n, @i: 1) when (@i <= @n) {\n    .column-sm-@{i} {\n      width: (@i * 100% / @n);\n    }\n    .generate-columns(@n, (@i+1));\n  }\n}\ndiv[class^=\"column-xs-\"]{\n\tfloat: left;\n}\ndiv[class^=\"column-sm-\"]{\n\tfloat: left;\n}\n```\n\n编译后的CSS代码:\n\n```\n@media screen and (max-width: 768px) {\n  .column-xs-1 {  width: 8.33333333%;  }\n  .column-xs-2 {  width: 16.66666667%;  }\n  .column-xs-3 {  width: 25%;  }\n  .column-xs-4 {  width: 33.33333333%;  }\n  .column-xs-5 {  width: 41.66666667%;  }\n  .column-xs-6 {  width: 50%;  }\n  .column-xs-7 {  width: 58.33333333%;  }\n  .column-xs-8 {  width: 66.66666667%;  }\n  .column-xs-9 {  width: 75%;  }\n  .column-xs-10 {  width: 83.33333333%;  }\n  .column-xs-11 {  width: 91.66666667%;  }\n  .column-xs-12 {  width: 100%;  }\n}\n@media screen and (min-width: 768px) {\n  .column-sm-1 {  width: 8.33333333%;  }\n  .column-sm-2 {  width: 16.66666667%;  }\n  .column-sm-3 {  width: 25%;  }\n  .column-sm-4 {  width: 33.33333333%;  }\n  .column-sm-5 {  width: 41.66666667%;  }\n  .column-sm-6 {  width: 50%;  }\n  .column-sm-7 {  width: 58.33333333%;  }\n  .column-sm-8 {  width: 66.66666667%;  }\n  .column-sm-9 {  width: 75%;  }\n  .column-sm-10 {  width: 83.33333333%;  }\n  .column-sm-11 {  width: 91.66666667%;  }  \n  .column-sm-12 {  width: 100%;  }\n}\ndiv[class^=\"column-xs-\"]{\n\tfloat: left;\n}\ndiv[class^=\"column-sm-\"]{\n\tfloat: left;\n}\n\n```\n\n###  七、全屏布局 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a13716f2d8c3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"left\">left</div>\n    <div id=\"right\">right</div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\nhtml, body, #parent {height: 100%;overflow: hidden;}\n#parent > div {\n    border: 1px solid #000;\n}\n#top {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 100px;\n}\n#left {\n    position: absolute;\n    top: 100px;  /*值大于等于#top的高度*/\n    left: 0;\n    bottom: 50px;  /*值大于等于#bottom的高度*/\n    width: 200px;\n}\n#right {\n    position: absolute;\n    overflow: auto;\n    left: 200px;  /*值大于等于#left的宽度*/\n    right: 0;\n    top: 100px;  /*值大于等于#top的高度*/\n    bottom: 50px;  /*值大于等于#bottom的高度*/\n}\n#bottom {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 50px;\n}\n\n```\n\n优缺点：\n\n- 优点：容易理解\n- 缺点：代码繁多；需要计算好各个盒子的宽高；\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"middle\">\n        <div id=\"left\">left</div>\n        <div id=\"right\">right</div>\n    </div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n*{\n    margin: 0;\n    padding: 0;\n}\nhtml,body,#parent{\n    height:100%;\n}\n#parent {\n    display: flex;\n    flex-direction: column;\n}\n#top {\n    height: 100px;\n}\n#bottom {\n    height: 50px;\n}\n#middle {\n    flex: 1;\n    display: flex;\n}\n#left {\n    width: 200px;\n}\n#right {\n    flex: 1;\n    overflow: auto;\n}\n\n```\n\n#####  (3)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"left\">left</div>\n    <div id=\"right\">right</div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n*{\n    margin: 0;\n    padding: 0;\n}\nhtml, body, #parent {\n    height: 100%;\n}\n#parent {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    /*分成2列,第一列宽度200px,第二列1fr平分剩余的部分,此处换成auto也行*/\n    grid-template-columns: 200px 1fr;  \n    /*分成3行,第一行高度100px,第二行auto为自适应,此处换成1fr也行,第3行高度为50px*/\n    grid-template-rows: 100px auto 50px; \n    /*定义网格区域分布*/\n    grid-template-areas:\n        \"header header\"\n        \"aside main\"\n        \"footer footer\";\n}\n#parent>div{\n    border: 1px solid #000;\n}\n#top{\n    grid-area: header;  /*指定在哪个网格区域*/\n}\n#left{\n    grid-area: aside;  /*指定在哪个网格区域*/\n}\n#right{\n    grid-area: main;  /*指定在哪个网格区域*/\n}\n#bottom{\n    grid-area: footer;  /*指定在哪个网格区域*/\n}\n\n```\n\n### ","source":"_posts/css-drygoods.md","raw":"---\ntitle: css布局方式汇总\ndate: 2020-01-08 09:33:39\ntags:\ncover: img/ffBg.jpg\n---\n### 一、水平居中 \n\n#####  (1)文本/行内元素/行内块级元素▲ \n\n原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐\n\n```\n#parent{\n    text-align: center;\n}\n```\n\n优缺点\n\n- 优点：简单快捷，容易理解，兼容性非常好\n- 缺点：只对行内内容有效；属性会继承影响到后代行内内容；如果子元素宽度大于父元素宽度则无效，只有后代行内内容中宽度小于设置text-align属性的元素宽度的时候，才会水平居中\n\n#####  (2)单个块级元素▲ \n\n原理：根据[规范](https://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins)介绍得很清楚了，有这么一种情况：在margin有节余的同时如果左右margin设置了auto，将会均分剩余空间。另外，如果上下的margin设置了auto，其计算值为0\n\n```\n#son{\n    width: 100px; /*必须定宽*/\n    margin: 0 auto;\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：必须定宽，并且值不能为auto；宽度要小于父元素，否则无效\n\n#####  (3)多个块级元素 \n\n原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐\n\n```\n#parent{\n    text-align: center;\n}\n.son{\n    display: inline-block; /*改为行内或者行内块级形式，以达到text-align对其生效*/\n}\n```\n\n优缺点\n\n- 优点：简单，容易理解，兼容性非常好\n- 缺点：只对行内内容有效；属性会继承影响到后代行内内容；块级改为inline-block换行、空格会产生元素间隔\n\n#####  (4)使用绝对定位实现▲ \n\n原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的\n\n```\n#parent{\n    height: 200px;\n    width: 200px;  /*定宽*/\n    position: relative;  /*父相*/\n    background-color: #f00;\n}\n#son{\n    position: absolute;  /*子绝*/\n    left: 50%;  /*父元素宽度一半,这里等同于left:100px*/\n    transform: translateX(-50%);  /*自身宽度一半,等同于margin-left: -50px;*/\n    width: 100px;  /*定宽*/\n    height: 100px;\n    background-color: #00ff00;\n}\n```\n\n优缺点\n\n- 优点：使用margin-left兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin-left需要知道宽度值；使用transform兼容性不好（ie9+）\n\n#####  (5)任意个元素(flex) \n\n原理：就是设置当前主轴对齐方式为居中。说不上为什么，flex无非就是主轴侧轴是重点，然后就是排列方式的设置，可以去看看文末的flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    justify-content: center;\n}\n```\n\n优缺点\n\n- 优点：功能强大；简单方便；容易理解\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  本章小结：\n\n- 对于水平居中，我们应该先考虑，哪些元素有自带的居中效果，最先想到的应该就是 `text-align:center` 了，但是这个只对行内内容有效，所以我们要使用 `text-align:center` 就必须将子元素设置为 `display: inline;` 或者 `display: inline-block;` ；\n- 其次就是考虑能不能用`margin: 0 auto;` ，因为这都是一两句代码能搞定的事，实在不行就是用绝对定位去实现了。\n- 移动端能用flex就用flex，简单方便，灵活并且功能强大，无愧为网页布局的一大利器！\n\n###  二、垂直居中 \n\n*一,二,三章都是parent+son的简单结构,html代码和效果图就不贴出来了,第四章以后才有*\n\n#####  (1)单行文本/行内元素/行内块级元素▲ \n\n原理：line-height的最终表现是通过inline box实现的，而无论inline box所占据的高度是多少（无论比文字大还是比文字小），其占据的空间都是与文字内容公用水平中垂线的。\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;  /*与height等值*/\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：只能用于单行行内内容；要知道高度的值\n\n#####  (2)多行文本/行内元素/行内块级元素 \n\n原理同上\n\n```\n#parent{  /*或者用span把所有文字包裹起来，设置display：inline-block转换成图片的方式解决*/\n    height: 150px;\n    line-height: 30px;  /*元素在页面呈现为5行,则line-height的值为height/5*/\n}\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：只能用于行内内容；需要知道高度和最终呈现多少行来计算出line-height的值，建议用span包裹多行文本\n\n#####  (3)图片▲ \n\n原理：[vertical-align和line-height的基友关系](http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/)\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;\n    font-size: 0;\n}\nimg#son{vertical-align: middle;} /*默认是基线对齐，改为middle*/\n```\n\n优缺点\n\n- 优点：简单；兼容性好\n- 缺点：需要添加font-size: 0; 才可以完全的垂直居中；不过需要主要，html#parent包裹img之间需要有换行或空格\n\n#####  (4)单个块级元素 \n\nhtml代码:\n\n```\n<div id=\"parent\">\n    <div id=\"son\"></div>\n</div>\n```\n\n######  (4-1) 使用tabel-cell实现: \n\n原理：CSS Table，使表格内容对齐方式为middle\n\n```\n#parent{\n    display: table-cell;\n    vertical-align: middle;\n}\n```\n\n优缺点\n\n- 优点：简单；宽高不定；兼容性好（ie8+）\n- 缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置display: table; 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素\n\n######  (4-2) 使用绝对定位实现:▲ \n\n```\n/*原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的*/\n#parent{\n    height: 150px;\n    position: relative;  /*父相*/\n}\n#son{\n    position: absolute;  /*子绝*/\n    top: 50%;  /*父元素高度一半,这里等同于top:75px;*/\n    transform: translateY(-50%);  /*自身高度一半,这里等同于margin-top:-25px;*/\n    height: 50px;\n}\n\n/*优缺点\n- 优点：使用margin-top兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin-top需要知道高度值；使用transform兼容性不好（ie9+）*/\n\n或\n\n/*原理：当top、bottom为0时,margin-top&bottom会无限延伸占满空间并且平分*/\n#parent{position: relative;}\n#son{\n    position: absolute;\n    margin: auto 0;\n    top: 0;\n    bottom: 0;\n    height: 50px;\n}\n\n/*优缺点\n- 优点：简单;兼容性较好(ie8+)\n- 缺点：脱离文档流*/\n```\n\n######  (4-3) 使用flex实现: \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    align-items: center;\n}\n\n或\n\n#parent{display: flex;}\n#son{align-self: center;}\n\n或\n/*原理：这个尚未搞清楚，应该是flex使margin上下边界无限延伸至剩余空间并平分了*/\n#parent{display: flex;}\n#son{margin: auto 0;}\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  (5)任意个元素(flex) \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n    align-items: center;\n}\n\n或\n\n#parent{\n    display: flex;\n}\n.son{\n    align-self: center;\n}\n\n或 \n\n#parent{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  ★本章小结：\n\n- 对于垂直居中，最先想到的应该就是 `line-height` 了，但是这个只能用于行内内容；\n- 其次就是考虑能不能用`vertical-align: middle;` ，不过这个一定要熟知原理才能用得顺手，建议看下[vertical-align和line-height的基友关系](http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/) ；\n- 然后便是绝对定位，虽然代码多了点，但是胜在适用于不同情况；\n- 移动端兼容性允许的情况下能用flex就用flex\n\n###  三、水平垂直居中 \n\n#####  (1)行内/行内块级/图片▲ \n\n原理：`text-align: center;` 控制行内内容相对于块父元素水平居中,然后就是`line-height`和`vertical-align`的基友关系使其垂直居中，`font-size: 0;` 是为了消除近似居中的bug\n\n```\n#parent{\n    height: 150px;\n    line-height: 150px;  /*行高的值与height相等*/\n    text-align: center;\n    font-size: 0;   /*消除幽灵空白节点的bug*/\n}\n#son{\n    /*display: inline-block;*/  /*如果是块级元素需改为行内或行内块级才生效*/\n    vertical-align: middle;\n}\n```\n\n优缺点\n\n- 优点：代码简单；兼容性好（ie8+）\n- 缺点：只对行内内容有效；需要添加`font-size: 0;` 才可以完全的垂直居中；不过需要注意html中#parent包裹#son之间需要有换行或空格；熟悉`line-height`和`vertical-align`的基友关系较难\n\n#####  (2)table-cell \n\n原理：CSS Table，使表格内容垂直对齐方式为middle,然后根据是行内内容还是块级内容采取不同的方式达到水平居中\n\n```\n#parent{\n    height: 150px;\n    width: 200px;\n    display: table-cell;\n    vertical-align: middle;\n    /*text-align: center;*/   /*如果是行内元素就添加这个*/\n}\n#son{\n    /*margin: 0 auto;*/    /*如果是块级元素就添加这个*/\n    width: 100px;\n    height: 50px;\n}\n```\n\n优缺点\n\n- 优点：简单；适用于宽度高度未知情况；兼容性好（ie8+）\n- 缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置`display: table;` 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素\n\n#####  (3)button作为父元素 \n\n原理：button的默认样式，再把需要居中的元素表现形式改为行内或行内块级就好\n\n```\nbutton#parent{  /*改掉button默认样式就好了,不需要居中处理*/\n    height: 150px;\n    width: 200px;\n    outline: none;  \n    border: none;\n}\n#son{\n    display: inline-block; /*button自带text-align: center,改为行内水平居中生效*/\n}\n```\n\n优缺点\n\n- 优点：简单方便，充分利用默认样式\n- 缺点：只适用于行内内容；需要清除部分默认样式；水平垂直居中兼容性很好，但是ie下点击会有凹陷效果！\n\n#####  (4)绝对定位 \n\n原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到几何上的水平垂直居中\n\n```\n#parent{\n    position: relative;\n}\n#son{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    /*定宽高时等同于margin-left:负自身宽度一半;margin-top:负自身高度一半;*/\n    transform: translate(-50%,-50%); \n}\n```\n\n优缺点\n\n- 优点：使用margin兼容性好；不管是块级还是行内元素都可以实现\n- 缺点：代码较多；脱离文档流；使用margin需要知道宽高；使用transform兼容性不好（ie9+）\n\n#####  (5)绝对居中 \n\n原理：当top、bottom为0时,margin-top&bottom设置auto的话会无限延伸占满空间并且平分；当left、right为0时,margin-left&right设置auto的话会无限延伸占满空间并且平分\n\n```\n#parent{\n    position: relative;\n}\n#son{\n    position: absolute;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n```\n\n优缺点\n\n- 优点：无需关注宽高；兼容性较好(ie8+)\n- 缺点：代码较多；脱离文档流\n\n#####  (6)flex \n\n原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐\n\n```\n#parent{\n    display: flex;\n}\n#son{\n    margin: auto;\n}\n\n或\n\n#parent{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n或\n\n#parent{\n    display: flex;\n    justify-content: center;\n}\n#son{\n    align-self: center;\n}\n复制代码\n```\n\n优缺点\n\n- 优点：简单灵活；功能强大\n- 缺点：PC端[兼容性不好](https://caniuse.com/#search=flex)，移动端（Android4.0+）\n\n#####  (7)视窗居中 \n\n原理：vh为视口单位，视口即文档可视的部分，50vh就是视口高度的50/100，设置50vh上边距再\n\n```\n#son{\n\t/*0如果去掉，则会多出滚动条并且上下都是50vh的margin。如果去掉就给body加上overflow:hidden;*/\n    margin: 50vh auto 0;  \n    transform: translateY(-50%);\n}\n```\n\n优缺点\n\n- 优点：简单；容易理解；两句代码达到屏幕水平垂直居中\n- 缺点：兼容性不好（ie9+，Android4.4+）\n\n#####  ★本章小结：\n\n- 一般情况下，水平垂直居中，我们最常用的就是绝对定位加负边距了，缺点就是需要知道宽高，使用transform倒是可以不需要，但是兼容性不好（ie9+）；\n- 其次就是绝对居中，绝对定位设置top、left、right、bottom为0，然后`margin:auto;` 让浏览器自动平分边距以达到水平垂直居中的目的；\n- 如果是行内/行内块级/图片这些内容，可以优先考虑`line-height`和`vertical-align` 结合使用，不要忘了还有`text-align` ，这个方法代码其实不多，就是理解原理有点困难，想要熟练应对各种情况还需好好研究；\n- 移动端兼容性允许的情况下能用flex就用flex。\n\n###  四、两列布局 \n\n####  4.1 左列定宽,右列自适应 \n\n#####  (1)利用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right\">右列自适应</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    background-color: #0f0;\n    height: 500px;\n    margin-left: 100px; /*大于等于#left的宽度*/\n}\n复制代码\n```\n\n#####  (2)利用float+margin(fix)实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right-fix\">\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right-fix {\n    float: right;\n    width: 100%;\n    margin-left: -100px; /*正值大于或等于#left的宽度,才能显示在同一行*/\n}\n#right{\n    margin-left: 100px; /*大于或等于#left的宽度*/\n    background-color: #0f0;\n    height: 500px;\n}\n复制代码\n```\n\n#####  (3)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"left\">左列定宽</div>\n<div id=\"right\">右列自适应</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#left {\n    background-color: #f00;\n    float: left;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    background-color: #0f0;\n    height: 500px;\n    overflow: hidden; /*触发bfc达到自适应*/\n}\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (4)使用table实现 \n\nhtml代码:\n\n```\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    display: table;\n    height: 500px;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n#left,#right{\n    display: table-cell;  /*利用单元格自动分配宽度*/\n}\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (5)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    position: relative;  /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #f00;\n    width: 100px;\n    height: 500px;\n}\n#right {\n    position: absolute;\n    top: 0;\n    left: 100px;  /*值大于等于#left的宽度*/\n    right: 0;\n    background-color: #0f0;\n    height: 500px;\n}\n```\n\n#####  (6)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    height: 500px;\n    display: flex;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#right {\n    flex: 1; /*均分了父元素剩余空间*/\n    background-color: #0f0;\n}\n```\n\n#####  (7)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px auto;  /*设定2列就ok了,auto换成1fr也行*/\n}\n#left {\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  4.2 左列自适应,右列定宽 \n\n效果:\n\n\n#####  (1)使用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    height: 500px;\n    padding-left: 100px;  /*抵消#left的margin-left以达到#parent水平居中*/\n}\n#left {\n    width: 100%;\n    height: 500px;\n    float: left;\n    margin-left: -100px; /*正值等于#right的宽度*/\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    width: 100px;\n    float: right;\n    background-color: #0f0;\n}\n\n```\n\n#####  (2)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"right\">右列定宽</div>\n    <div id=\"left\">左列自适应</div>   <!--顺序要换一下-->\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#left {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    margin-left: 10px;  /*margin需要定义在#right中*/\n    float: right;\n    width: 100px;\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (3)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n#left {\n    background-color: #f00;\n    display: table-cell;\n}\n#right {\n    width: 100px;\n    background-color: #0f0;\n    display: table-cell;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (4)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    position: relative;  /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 100px;  /*大于等于#rigth的宽度*/\n    background-color: #f00;\n    height: 500px;\n}\n#right {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: #0f0;\n    width: 100px;\n    height: 500px;\n}\n\n```\n\n#####  (5)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    height: 500px;\n    display: flex;\n}\n#left {\n    flex: 1;\n    background-color: #f00;\n}\n#right {\n    width: 100px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (6)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: auto 100px;  /*设定2列,auto换成1fr也行*/\n}\n#left {\n    background-color: #f00;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  4.3 一列不定,一列自适应 \n\n(盒子宽度随着内容增加或减少发生变化,另一个盒子自适应)\n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1676e57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n变化后:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d19c5afc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#left {\n    margin-right: 10px;\n    float: left;  /*只设置浮动,不设宽度*/\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    display: flex;\n}\n#left { /*不设宽度*/\n    margin-right: 10px;\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    background-color: #0f0;\n    flex: 1;  /*均分#parent剩余的部分*/\n}\n\n```\n\n#####  (3)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列不定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n复制代码\n```\n\ncss代码:\n\n```\n#parent{\n    display: grid;\n    grid-template-columns: auto 1fr;  /*auto和1fr换一下顺序就是左列自适应,右列不定宽了*/\n}\n#left {\n    margin-right: 10px;\n    height: 500px;\n    background-color: #f00;\n}\n#right {\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n*左列自适应,右列不定宽同理(参考4.1和4.3对应代码示例)*\n\n###  五、三列布局 \n\n####  5.1 两列定宽,一列自适应 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1ea53c5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float+margin实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    min-width: 310px; /*100+10+200,防止宽度不够,子元素换行*/\n}\n#left {\n    margin-right: 10px;  /*#left和#center间隔*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center{\n    float: left;\n    width: 200px;\n    height: 500px;\n    background-color: #eeff2b;\n}\n#right {\n    margin-left: 320px;  /*等于#left和#center的宽度之和加上间隔,多出来的就是#right和#center的间隔*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (2)使用float+overflow实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent{\n    min-width: 320px; /*100+10+200+20,防止宽度不够,子元素换行*/\n}\n#left {\n    margin-right: 10px; /*间隔*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center{\n    margin-right: 10px; /*在此定义和#right的间隔*/\n    float: left;\n    width: 200px;\n    height: 500px;\n    background-color: #eeff2b;\n}\n#right {\n    overflow: hidden;  /*触发bfc*/\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果\n- 缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6\n\n#####  (3)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%; \n    height: 520px; /*抵消上下间距10*2的高度影响*/\n    margin: -10px 0;  /*抵消上下边间距10的位置影响*/\n    display: table;\n    /*左右两边间距大了一点,子元素改用padding设置盒子间距就没有这个问题*/\n    border-spacing: 10px;  /*关键!!!设置间距*/\n}\n#left {\n    display: table-cell;\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    display: table-cell;\n    width: 200px;\n    background-color: #eeff2b;\n}\n#right {\n    display: table-cell;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (4)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n#left {\n    margin-right: 10px;  /*间距*/\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    margin-right: 10px;  /*间距*/\n    width: 200px;\n    background-color: #eeff2b;\n}\n#right {\n    flex: 1;  /*均分#parent剩余的部分达到自适应*/\n    background-color: #0f0;\n}\n\n```\n\n#####  (5)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间定宽</div>\n    <div id=\"right\">右列自适应</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px 200px auto; /*设置3列,固定第一第二列的宽度,第三列auto或者1fr*/\n}\n#left {\n    margin-right: 10px;  /*间距*/\n    background-color: #f00;\n}\n#center {\n    margin-right: 10px;  /*间距*/\n    background-color: #eeff2b;\n}\n#right {\n    background-color: #0f0;\n}\n\n```\n\n####  5.2 两侧定宽,中间自适应 \n\n#####  5.2.1 双飞翼布局方法 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1cc24f8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"header\"></div>\n<!--中间栏需要放在前面-->\n<div id=\"parent\">\n    <div id=\"center\">\n        <div id=\"center_inbox\">中间自适应</div>\n        <hr>  <!--方便观察原理-->\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n<div id=\"footer\"></div>\n</body>\n\n```\n\ncss代码:\n\n```\n#header {\n    height: 60px;\n    background-color: #ccc;\n}\n#left {\n    float: left;\n    width: 100px;\n    height: 500px;\n    margin-left: -100%; /*调整#left的位置,值等于自身宽度*/\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    height: 500px;\n    float: left;\n    width: 100%;\n    background-color: #eeff2b;\n}\n#center_inbox{\n    height: 480px;\n    border: 1px solid #000;\n    margin: 0 220px 0 120px;  /*关键!!!左右边界等于左右盒子的宽度,多出来的为盒子间隔*/\n}\n#right {\n    float: left;\n    width: 200px;\n    height: 500px;\n    margin-left: -200px;  /*使right到指定的位置,值等于自身宽度*/\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer {\n    clear: both;  /*注意清除浮动!!*/\n    height: 60px;\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.2 圣杯布局方法 \n\n\nhtml代码:\n\n```\n<body>\n<div id=\"header\"></div>\n<div id=\"parent\">\n    <!--#center需要放在前面-->\n    <div id=\"center\">中间自适应\n        <hr>\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n<div id=\"footer\"></div>\n</body>\n\n```\n\ncss代码:\n\n```\n#header{\n    height: 60px;\n    background-color: #ccc;\n}\n#parent {\n    box-sizing: border-box;\n    height: 500px;\n    padding: 0 215px 0 115px;  /*为了使#center摆正,左右padding分别等于左右盒子的宽,可以结合左右盒子相对定位的left调整间距*/\n}\n#left {\n    margin-left: -100%;  /*使#left上去一行*/\n    position: relative;\n    left: -115px;  /*相对定位调整#left的位置,正值大于或等于自身宽度*/\n    float: left;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    float: left;\n    width: 100%;  /*由于#parent的padding,达到自适应的目的*/\n    height: 500px;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    background-color: #eeff2b;\n}\n#right {\n    position: relative;\n    left: 215px; /*相对定位调整#right的位置,大于或等于自身宽度*/\n    width: 200px;\n    height: 500px;\n    margin-left: -200px;  /*使#right上去一行*/\n    float: left;\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer{\n    height: 60px;\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.3 使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"header\"></div>\n    <!--#center需要放在前面-->\n    <div id=\"center\">中间自适应\n        <hr>\n    </div>\n    <div id=\"left\">左列定宽</div>\n    <div id=\"right\">右列定宽</div>\n    <div id=\"footer\"></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: 100px auto 200px; /*设定3列*/\n    grid-template-rows: 60px auto 60px; /*设定3行*/\n    /*设置网格区域分布*/\n    grid-template-areas: \n        \"header header header\" \n        \"leftside main rightside\" \n        \"footer footer footer\";\n}\n#header {\n    grid-area: header; /*指定在哪个网格区域*/\n    background-color: #ccc;\n}\n#left {\n    grid-area: leftside;\n    background-color: #f00;\n    opacity: 0.5;\n}\n#center {\n    grid-area: main; /*指定在哪个网格区域*/\n    margin: 0 15px; /*设置间隔*/\n    border: 1px solid #000;\n    background-color: #eeff2b;\n}\n#right {\n    grid-area: rightside; /*指定在哪个网格区域*/\n    background-color: #0f0;\n    opacity: 0.5;\n}\n#footer {\n    grid-area: footer; /*指定在哪个网格区域*/\n    background-color: #ccc;\n}\n\n```\n\n#####  5.2.4 其他方法 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136f71b55c0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n#left {\n    display: table-cell;\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    display: table-cell;\n    background-color: #eeff2b;\n}\n#right {\n    display: table-cell;\n    width: 200px;\n    background-color: #0f0;\n}\n\n复制代码\n```\n\n优缺点：\n\n- 优点：代码简洁，容易理解；\n- 缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n#left {\n    width: 100px;\n    background-color: #f00;\n}\n#center {\n    flex: 1;  /*均分#parent剩余的部分*/\n    background-color: #eeff2b;\n}\n#right {\n    width: 200px;\n    background-color: #0f0;\n}\n\n```\n\n#####  (3)使用position实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"left\">左列定宽</div>\n    <div id=\"center\">中间自适应</div>\n    <div id=\"right\">右列定宽</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    position: relative; /*子绝父相*/\n}\n#left {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100px;\n    height: 500px;\n    background-color: #f00;\n}\n#center {\n    height: 500px;\n    margin-left: 100px; /*大于等于#left的宽度,或者给#parent添加同样大小的padding-left*/\n    margin-right: 200px;  /*大于等于#right的宽度,或者给#parent添加同样大小的padding-right*/\n    background-color: #eeff2b;\n}\n#right {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 200px;\n    height: 500px;\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：容易理解，兼容性比较好\n- 缺点：需手动计算宽度确定边距；脱离文档流；代码繁多\n\n###  六、多列布局 \n\n####  6.1 等宽布局 \n\n#####  6.1.1 四列等宽 \n\n#####  (1)使用float实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136f835236f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    margin-left: -20px; /*使整体内容看起来居中,抵消padding-left的影响*/\n}\n.column{\n    padding-left: 20px;  /*盒子的边距*/\n    width: 25%;\n    float: left;\n    box-sizing: border-box;\n    border: 1px solid #000;\n    background-clip: content-box; /*背景色从内容开始绘制,方便观察*/\n    height: 500px;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；兼容性较好\n- 缺点：需要手动清除浮动，否则会产生高度塌陷\n\n#####  (2)使用table实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a136ffc5df62?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 540px;  /*抵消上下边20*2间距的高度影响*/\n    display: table;\n    margin: -20px 0;  /*抵消上下边20*2间距的位置影响*/\n    /*两边离页面间距较大,改用子元素设置padding来当成间隔就不会有这样的问题*/\n    border-spacing: 20px;  /*设置间距*/\n}\n.column{\n    display: table-cell;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；无需关注宽度，单元格自动等分\n- 缺点：margin失效；设置间隔比较麻烦；不支持ie8-\n\n#####  (3)使用flex实现 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a137025dbc4c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    margin-left: -15px;  /*使内容看起来居中*/\n    height: 500px;\n    display: flex;\n}\n.column{\n    flex: 1; /*一起平分#parent*/\n    margin-left: 15px; /*设置间距*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n#####  多列等宽 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a137120f99b7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用float实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n}\n.column{\n    float: left;  /*添加浮动*/\n    width: 16.66666666666667%;  /*100÷列数,得出百分比*/\n    height: 500px;\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；兼容性较好\n- 缺点：需要手动清除浮动，否则会产生高度塌陷\n\n#####  (2)使用table实现 \n\nhtml代码\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n```\n\ncss代码:\n\n```\n#parent {\n    width: 100%;\n    height: 500px;\n    display: table;\n}\n.column{\n    display: table-cell; /*无需关注列数,单元格自动平分*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简单，容易理解；无需关注宽度。单元格自动等分\n- 缺点：margin失效；设置间隔比较麻烦；不兼容ie8-\n\n#####  (3)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: flex;\n}\n.column{\n    flex: 1;  /*无需关注列数,一起平分#parent*/\n}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n#####  (4)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"column\">1 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">2 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">3 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">4 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">5 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n    <div class=\"column\">6 <p>我是文字我是文字我输文字我是文字我是文字</p></div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    height: 500px;\n    display: grid;\n    grid-template-columns: repeat(6,1fr);  /*6就是列数*/\n}\n.column{}\n.column:nth-child(odd){\n    background-color: #f00;\n}\n.column:nth-child(even){\n    background-color: #0f0;\n}\n\n```\n\n####  6.2 九宫格布局 \n\n#####  (1)使用table实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"row\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n        <div class=\"item\">6</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">7</div>\n        <div class=\"item\">8</div>\n        <div class=\"item\">9</div>\n    </div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: table;\n}\n.row {\n    display: table-row;\n}\n.item {\n    border: 1px solid #000;\n    display: table-cell;\n}\n\n```\n\n优缺点：\n\n- 优点：代码简洁，容易理解；\n- 缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"row\">\n        <div class=\"item\">1</div>\n        <div class=\"item\">2</div>\n        <div class=\"item\">3</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">4</div>\n        <div class=\"item\">5</div>\n        <div class=\"item\">6</div>\n    </div>\n    <div class=\"row\">\n        <div class=\"item\">7</div>\n        <div class=\"item\">8</div>\n        <div class=\"item\">9</div>\n    </div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n}\n.row {\n    display: flex;\n    flex: 1;\n}\n.item {\n    flex: 1;\n    border: 1px solid #000;\n}\n\n```\n\n#####  (3)使用Grid实现 \n\n*CSS Grid非常强大,可以实现各种各样的三维布局,可查阅本文结尾的阅读推荐*\n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div class=\"item\">1</div>\n    <div class=\"item\">2</div>\n    <div class=\"item\">3</div>\n    <div class=\"item\">4</div>\n    <div class=\"item\">5</div>\n    <div class=\"item\">6</div>\n    <div class=\"item\">7</div>\n    <div class=\"item\">8</div>\n    <div class=\"item\">9</div>\n</div>\n</body>\n\n复制代码\n```\n\ncss代码:\n\n```\n#parent {\n    width: 1200px;\n    height: 500px;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr); /*等同于1fr 1fr 1fr,此为重复的合并写法*/\n    grid-template-rows: repeat(3, 1fr);  /*等同于1fr 1fr 1fr,此为重复的合并写法*/\n}\n.item {\n    border: 1px solid #000;\n}\n\n```\n\n####  6.3 栅格系统 \n\n优缺点：\n\n- 优点：代码简洁，容易理解；提高页面内容的流动性，能适应多种设备；\n\n#####  (1)用Less生成 \n\n```\n/*生成栅格系统*/\n@media screen and (max-width: 768px){\n  .generate-columns(12);     /*此处设置生成列数*/\n  .generate-columns(@n, @i: 1) when (@i <= @n) {\n    .column-xs-@{i} {\n      width: (@i * 100% / @n);\n    }\n    .generate-columns(@n, (@i+1));\n  }\n}\n@media screen and (min-width: 768px){\n  .generate-columns(12);    /*此处设置生成列数*/\n  .generate-columns(@n, @i: 1) when (@i <= @n) {\n    .column-sm-@{i} {\n      width: (@i * 100% / @n);\n    }\n    .generate-columns(@n, (@i+1));\n  }\n}\ndiv[class^=\"column-xs-\"]{\n\tfloat: left;\n}\ndiv[class^=\"column-sm-\"]{\n\tfloat: left;\n}\n```\n\n编译后的CSS代码:\n\n```\n@media screen and (max-width: 768px) {\n  .column-xs-1 {  width: 8.33333333%;  }\n  .column-xs-2 {  width: 16.66666667%;  }\n  .column-xs-3 {  width: 25%;  }\n  .column-xs-4 {  width: 33.33333333%;  }\n  .column-xs-5 {  width: 41.66666667%;  }\n  .column-xs-6 {  width: 50%;  }\n  .column-xs-7 {  width: 58.33333333%;  }\n  .column-xs-8 {  width: 66.66666667%;  }\n  .column-xs-9 {  width: 75%;  }\n  .column-xs-10 {  width: 83.33333333%;  }\n  .column-xs-11 {  width: 91.66666667%;  }\n  .column-xs-12 {  width: 100%;  }\n}\n@media screen and (min-width: 768px) {\n  .column-sm-1 {  width: 8.33333333%;  }\n  .column-sm-2 {  width: 16.66666667%;  }\n  .column-sm-3 {  width: 25%;  }\n  .column-sm-4 {  width: 33.33333333%;  }\n  .column-sm-5 {  width: 41.66666667%;  }\n  .column-sm-6 {  width: 50%;  }\n  .column-sm-7 {  width: 58.33333333%;  }\n  .column-sm-8 {  width: 66.66666667%;  }\n  .column-sm-9 {  width: 75%;  }\n  .column-sm-10 {  width: 83.33333333%;  }\n  .column-sm-11 {  width: 91.66666667%;  }  \n  .column-sm-12 {  width: 100%;  }\n}\ndiv[class^=\"column-xs-\"]{\n\tfloat: left;\n}\ndiv[class^=\"column-sm-\"]{\n\tfloat: left;\n}\n\n```\n\n###  七、全屏布局 \n\n效果图:\n\n\n\n![image.png](https://user-gold-cdn.xitu.io/2018/3/9/1620a13716f2d8c3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n\n\n#####  (1)使用绝对定位实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"left\">left</div>\n    <div id=\"right\">right</div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\nhtml, body, #parent {height: 100%;overflow: hidden;}\n#parent > div {\n    border: 1px solid #000;\n}\n#top {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 100px;\n}\n#left {\n    position: absolute;\n    top: 100px;  /*值大于等于#top的高度*/\n    left: 0;\n    bottom: 50px;  /*值大于等于#bottom的高度*/\n    width: 200px;\n}\n#right {\n    position: absolute;\n    overflow: auto;\n    left: 200px;  /*值大于等于#left的宽度*/\n    right: 0;\n    top: 100px;  /*值大于等于#top的高度*/\n    bottom: 50px;  /*值大于等于#bottom的高度*/\n}\n#bottom {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 50px;\n}\n\n```\n\n优缺点：\n\n- 优点：容易理解\n- 缺点：代码繁多；需要计算好各个盒子的宽高；\n\n#####  (2)使用flex实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"middle\">\n        <div id=\"left\">left</div>\n        <div id=\"right\">right</div>\n    </div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n*{\n    margin: 0;\n    padding: 0;\n}\nhtml,body,#parent{\n    height:100%;\n}\n#parent {\n    display: flex;\n    flex-direction: column;\n}\n#top {\n    height: 100px;\n}\n#bottom {\n    height: 50px;\n}\n#middle {\n    flex: 1;\n    display: flex;\n}\n#left {\n    width: 200px;\n}\n#right {\n    flex: 1;\n    overflow: auto;\n}\n\n```\n\n#####  (3)使用Grid实现 \n\nhtml代码:\n\n```\n<body>\n<div id=\"parent\">\n    <div id=\"top\">top</div>\n    <div id=\"left\">left</div>\n    <div id=\"right\">right</div>\n    <div id=\"bottom\">bottom</div>\n</div>\n</body>\n\n```\n\ncss代码:\n\n```\n*{\n    margin: 0;\n    padding: 0;\n}\nhtml, body, #parent {\n    height: 100%;\n}\n#parent {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    /*分成2列,第一列宽度200px,第二列1fr平分剩余的部分,此处换成auto也行*/\n    grid-template-columns: 200px 1fr;  \n    /*分成3行,第一行高度100px,第二行auto为自适应,此处换成1fr也行,第3行高度为50px*/\n    grid-template-rows: 100px auto 50px; \n    /*定义网格区域分布*/\n    grid-template-areas:\n        \"header header\"\n        \"aside main\"\n        \"footer footer\";\n}\n#parent>div{\n    border: 1px solid #000;\n}\n#top{\n    grid-area: header;  /*指定在哪个网格区域*/\n}\n#left{\n    grid-area: aside;  /*指定在哪个网格区域*/\n}\n#right{\n    grid-area: main;  /*指定在哪个网格区域*/\n}\n#bottom{\n    grid-area: footer;  /*指定在哪个网格区域*/\n}\n\n```\n\n### ","slug":"css-drygoods","published":1,"updated":"2020-01-09T01:55:27.318Z","_id":"ck54n05xq0000iyc954mm2s8v","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"一、水平居中\"><a href=\"#一、水平居中\" class=\"headerlink\" title=\"一、水平居中\"></a>一、水平居中</h3><h5 id=\"1-文本-行内元素-行内块级元素▲\"><a href=\"#1-文本-行内元素-行内块级元素▲\" class=\"headerlink\" title=\"(1)文本/行内元素/行内块级元素▲\"></a>(1)文本/行内元素/行内块级元素▲</h5><p>原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单快捷，容易理解，兼容性非常好</li>\n<li>缺点：只对行内内容有效；属性会继承影响到后代行内内容；如果子元素宽度大于父元素宽度则无效，只有后代行内内容中宽度小于设置text-align属性的元素宽度的时候，才会水平居中</li>\n</ul>\n<h5 id=\"2-单个块级元素▲\"><a href=\"#2-单个块级元素▲\" class=\"headerlink\" title=\"(2)单个块级元素▲\"></a>(2)单个块级元素▲</h5><p>原理：根据<a href=\"https://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins\" target=\"_blank\" rel=\"noopener\">规范</a>介绍得很清楚了，有这么一种情况：在margin有节余的同时如果左右margin设置了auto，将会均分剩余空间。另外，如果上下的margin设置了auto，其计算值为0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#son&#123;</span><br><span class=\"line\">    width: 100px; &#x2F;*必须定宽*&#x2F;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：必须定宽，并且值不能为auto；宽度要小于父元素，否则无效</li>\n</ul>\n<h5 id=\"3-多个块级元素\"><a href=\"#3-多个块级元素\" class=\"headerlink\" title=\"(3)多个块级元素\"></a>(3)多个块级元素</h5><p>原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.son&#123;</span><br><span class=\"line\">    display: inline-block; &#x2F;*改为行内或者行内块级形式，以达到text-align对其生效*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单，容易理解，兼容性非常好</li>\n<li>缺点：只对行内内容有效；属性会继承影响到后代行内内容；块级改为inline-block换行、空格会产生元素间隔</li>\n</ul>\n<h5 id=\"4-使用绝对定位实现▲\"><a href=\"#4-使用绝对定位实现▲\" class=\"headerlink\" title=\"(4)使用绝对定位实现▲\"></a>(4)使用绝对定位实现▲</h5><p>原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    width: 200px;  &#x2F;*定宽*&#x2F;</span><br><span class=\"line\">    position: relative;  &#x2F;*父相*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;  &#x2F;*子绝*&#x2F;</span><br><span class=\"line\">    left: 50%;  &#x2F;*父元素宽度一半,这里等同于left:100px*&#x2F;</span><br><span class=\"line\">    transform: translateX(-50%);  &#x2F;*自身宽度一半,等同于margin-left: -50px;*&#x2F;</span><br><span class=\"line\">    width: 100px;  &#x2F;*定宽*&#x2F;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    background-color: #00ff00;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：使用margin-left兼容性好；不管是块级还是行内元素都可以实现</li>\n<li>缺点：代码较多；脱离文档流；使用margin-left需要知道宽度值；使用transform兼容性不好（ie9+）</li>\n</ul>\n<h5 id=\"5-任意个元素-flex\"><a href=\"#5-任意个元素-flex\" class=\"headerlink\" title=\"(5)任意个元素(flex)\"></a>(5)任意个元素(flex)</h5><p>原理：就是设置当前主轴对齐方式为居中。说不上为什么，flex无非就是主轴侧轴是重点，然后就是排列方式的设置，可以去看看文末的flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：功能强大；简单方便；容易理解</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"本章小结：\"><a href=\"#本章小结：\" class=\"headerlink\" title=\"本章小结：\"></a>本章小结：</h5><ul>\n<li>对于水平居中，我们应该先考虑，哪些元素有自带的居中效果，最先想到的应该就是 <code>text-align:center</code> 了，但是这个只对行内内容有效，所以我们要使用 <code>text-align:center</code> 就必须将子元素设置为 <code>display: inline;</code> 或者 <code>display: inline-block;</code> ；</li>\n<li>其次就是考虑能不能用<code>margin: 0 auto;</code> ，因为这都是一两句代码能搞定的事，实在不行就是用绝对定位去实现了。</li>\n<li>移动端能用flex就用flex，简单方便，灵活并且功能强大，无愧为网页布局的一大利器！</li>\n</ul>\n<h3 id=\"二、垂直居中\"><a href=\"#二、垂直居中\" class=\"headerlink\" title=\"二、垂直居中\"></a>二、垂直居中</h3><p><em>一,二,三章都是parent+son的简单结构,html代码和效果图就不贴出来了,第四章以后才有</em></p>\n<h5 id=\"1-单行文本-行内元素-行内块级元素▲\"><a href=\"#1-单行文本-行内元素-行内块级元素▲\" class=\"headerlink\" title=\"(1)单行文本/行内元素/行内块级元素▲\"></a>(1)单行文本/行内元素/行内块级元素▲</h5><p>原理：line-height的最终表现是通过inline box实现的，而无论inline box所占据的高度是多少（无论比文字大还是比文字小），其占据的空间都是与文字内容公用水平中垂线的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;  &#x2F;*与height等值*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：只能用于单行行内内容；要知道高度的值</li>\n</ul>\n<h5 id=\"2-多行文本-行内元素-行内块级元素\"><a href=\"#2-多行文本-行内元素-行内块级元素\" class=\"headerlink\" title=\"(2)多行文本/行内元素/行内块级元素\"></a>(2)多行文本/行内元素/行内块级元素</h5><p>原理同上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;  &#x2F;*或者用span把所有文字包裹起来，设置display：inline-block转换成图片的方式解决*&#x2F;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 30px;  &#x2F;*元素在页面呈现为5行,则line-height的值为height&#x2F;5*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：只能用于行内内容；需要知道高度和最终呈现多少行来计算出line-height的值，建议用span包裹多行文本</li>\n</ul>\n<h5 id=\"3-图片▲\"><a href=\"#3-图片▲\" class=\"headerlink\" title=\"(3)图片▲\"></a>(3)图片▲</h5><p>原理：<a href=\"http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\" target=\"_blank\" rel=\"noopener\">vertical-align和line-height的基友关系</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;</span><br><span class=\"line\">    font-size: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">img#son&#123;vertical-align: middle;&#125; &#x2F;*默认是基线对齐，改为middle*&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：需要添加font-size: 0; 才可以完全的垂直居中；不过需要主要，html#parent包裹img之间需要有换行或空格</li>\n</ul>\n<h5 id=\"4-单个块级元素\"><a href=\"#4-单个块级元素\" class=\"headerlink\" title=\"(4)单个块级元素\"></a>(4)单个块级元素</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;son&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"4-1-使用tabel-cell实现\"><a href=\"#4-1-使用tabel-cell实现\" class=\"headerlink\" title=\"(4-1) 使用tabel-cell实现:\"></a>(4-1) 使用tabel-cell实现:</h6><p>原理：CSS Table，使表格内容对齐方式为middle</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；宽高不定；兼容性好（ie8+）</li>\n<li>缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置display: table; 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素</li>\n</ul>\n<h6 id=\"4-2-使用绝对定位实现-▲\"><a href=\"#4-2-使用绝对定位实现-▲\" class=\"headerlink\" title=\"(4-2) 使用绝对定位实现:▲\"></a>(4-2) 使用绝对定位实现:▲</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的*&#x2F;</span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    position: relative;  &#x2F;*父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;  &#x2F;*子绝*&#x2F;</span><br><span class=\"line\">    top: 50%;  &#x2F;*父元素高度一半,这里等同于top:75px;*&#x2F;</span><br><span class=\"line\">    transform: translateY(-50%);  &#x2F;*自身高度一半,这里等同于margin-top:-25px;*&#x2F;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*优缺点</span><br><span class=\"line\">- 优点：使用margin-top兼容性好；不管是块级还是行内元素都可以实现</span><br><span class=\"line\">- 缺点：代码较多；脱离文档流；使用margin-top需要知道高度值；使用transform兼容性不好（ie9+）*&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*原理：当top、bottom为0时,margin-top&amp;bottom会无限延伸占满空间并且平分*&#x2F;</span><br><span class=\"line\">#parent&#123;position: relative;&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    margin: auto 0;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*优缺点</span><br><span class=\"line\">- 优点：简单;兼容性较好(ie8+)</span><br><span class=\"line\">- 缺点：脱离文档流*&#x2F;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"4-3-使用flex实现\"><a href=\"#4-3-使用flex实现\" class=\"headerlink\" title=\"(4-3) 使用flex实现:\"></a>(4-3) 使用flex实现:</h6><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;display: flex;&#125;</span><br><span class=\"line\">#son&#123;align-self: center;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\">&#x2F;*原理：这个尚未搞清楚，应该是flex使margin上下边界无限延伸至剩余空间并平分了*&#x2F;</span><br><span class=\"line\">#parent&#123;display: flex;&#125;</span><br><span class=\"line\">#son&#123;margin: auto 0;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"5-任意个元素-flex-1\"><a href=\"#5-任意个元素-flex-1\" class=\"headerlink\" title=\"(5)任意个元素(flex)\"></a>(5)任意个元素(flex)</h5><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.son&#123;</span><br><span class=\"line\">    align-self: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或 </span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"★本章小结：\"><a href=\"#★本章小结：\" class=\"headerlink\" title=\"★本章小结：\"></a>★本章小结：</h5><ul>\n<li>对于垂直居中，最先想到的应该就是 <code>line-height</code> 了，但是这个只能用于行内内容；</li>\n<li>其次就是考虑能不能用<code>vertical-align: middle;</code> ，不过这个一定要熟知原理才能用得顺手，建议看下<a href=\"http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\" target=\"_blank\" rel=\"noopener\">vertical-align和line-height的基友关系</a> ；</li>\n<li>然后便是绝对定位，虽然代码多了点，但是胜在适用于不同情况；</li>\n<li>移动端兼容性允许的情况下能用flex就用flex</li>\n</ul>\n<h3 id=\"三、水平垂直居中\"><a href=\"#三、水平垂直居中\" class=\"headerlink\" title=\"三、水平垂直居中\"></a>三、水平垂直居中</h3><h5 id=\"1-行内-行内块级-图片▲\"><a href=\"#1-行内-行内块级-图片▲\" class=\"headerlink\" title=\"(1)行内/行内块级/图片▲\"></a>(1)行内/行内块级/图片▲</h5><p>原理：<code>text-align: center;</code> 控制行内内容相对于块父元素水平居中,然后就是<code>line-height</code>和<code>vertical-align</code>的基友关系使其垂直居中，<code>font-size: 0;</code> 是为了消除近似居中的bug</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;  &#x2F;*行高的值与height相等*&#x2F;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    font-size: 0;   &#x2F;*消除幽灵空白节点的bug*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    &#x2F;*display: inline-block;*&#x2F;  &#x2F;*如果是块级元素需改为行内或行内块级才生效*&#x2F;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：代码简单；兼容性好（ie8+）</li>\n<li>缺点：只对行内内容有效；需要添加<code>font-size: 0;</code> 才可以完全的垂直居中；不过需要注意html中#parent包裹#son之间需要有换行或空格；熟悉<code>line-height</code>和<code>vertical-align</code>的基友关系较难</li>\n</ul>\n<h5 id=\"2-table-cell\"><a href=\"#2-table-cell\" class=\"headerlink\" title=\"(2)table-cell\"></a>(2)table-cell</h5><p>原理：CSS Table，使表格内容垂直对齐方式为middle,然后根据是行内内容还是块级内容采取不同的方式达到水平居中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">    &#x2F;*text-align: center;*&#x2F;   &#x2F;*如果是行内元素就添加这个*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    &#x2F;*margin: 0 auto;*&#x2F;    &#x2F;*如果是块级元素就添加这个*&#x2F;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；适用于宽度高度未知情况；兼容性好（ie8+）</li>\n<li>缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置<code>display: table;</code> 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素</li>\n</ul>\n<h5 id=\"3-button作为父元素\"><a href=\"#3-button作为父元素\" class=\"headerlink\" title=\"(3)button作为父元素\"></a>(3)button作为父元素</h5><p>原理：button的默认样式，再把需要居中的元素表现形式改为行内或行内块级就好</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button#parent&#123;  &#x2F;*改掉button默认样式就好了,不需要居中处理*&#x2F;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    outline: none;  </span><br><span class=\"line\">    border: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    display: inline-block; &#x2F;*button自带text-align: center,改为行内水平居中生效*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单方便，充分利用默认样式</li>\n<li>缺点：只适用于行内内容；需要清除部分默认样式；水平垂直居中兼容性很好，但是ie下点击会有凹陷效果！</li>\n</ul>\n<h5 id=\"4-绝对定位\"><a href=\"#4-绝对定位\" class=\"headerlink\" title=\"(4)绝对定位\"></a>(4)绝对定位</h5><p>原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到几何上的水平垂直居中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 50%;</span><br><span class=\"line\">    left: 50%;</span><br><span class=\"line\">    &#x2F;*定宽高时等同于margin-left:负自身宽度一半;margin-top:负自身高度一半;*&#x2F;</span><br><span class=\"line\">    transform: translate(-50%,-50%); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：使用margin兼容性好；不管是块级还是行内元素都可以实现</li>\n<li>缺点：代码较多；脱离文档流；使用margin需要知道宽高；使用transform兼容性不好（ie9+）</li>\n</ul>\n<h5 id=\"5-绝对居中\"><a href=\"#5-绝对居中\" class=\"headerlink\" title=\"(5)绝对居中\"></a>(5)绝对居中</h5><p>原理：当top、bottom为0时,margin-top&amp;bottom设置auto的话会无限延伸占满空间并且平分；当left、right为0时,margin-left&amp;right设置auto的话会无限延伸占满空间并且平分</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：无需关注宽高；兼容性较好(ie8+)</li>\n<li>缺点：代码较多；脱离文档流</li>\n</ul>\n<h5 id=\"6-flex\"><a href=\"#6-flex\" class=\"headerlink\" title=\"(6)flex\"></a>(6)flex</h5><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    align-self: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"7-视窗居中\"><a href=\"#7-视窗居中\" class=\"headerlink\" title=\"(7)视窗居中\"></a>(7)视窗居中</h5><p>原理：vh为视口单位，视口即文档可视的部分，50vh就是视口高度的50/100，设置50vh上边距再</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#son&#123;</span><br><span class=\"line\">\t&#x2F;*0如果去掉，则会多出滚动条并且上下都是50vh的margin。如果去掉就给body加上overflow:hidden;*&#x2F;</span><br><span class=\"line\">    margin: 50vh auto 0;  </span><br><span class=\"line\">    transform: translateY(-50%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；容易理解；两句代码达到屏幕水平垂直居中</li>\n<li>缺点：兼容性不好（ie9+，Android4.4+）</li>\n</ul>\n<h5 id=\"★本章小结：-1\"><a href=\"#★本章小结：-1\" class=\"headerlink\" title=\"★本章小结：\"></a>★本章小结：</h5><ul>\n<li>一般情况下，水平垂直居中，我们最常用的就是绝对定位加负边距了，缺点就是需要知道宽高，使用transform倒是可以不需要，但是兼容性不好（ie9+）；</li>\n<li>其次就是绝对居中，绝对定位设置top、left、right、bottom为0，然后<code>margin:auto;</code> 让浏览器自动平分边距以达到水平垂直居中的目的；</li>\n<li>如果是行内/行内块级/图片这些内容，可以优先考虑<code>line-height</code>和<code>vertical-align</code> 结合使用，不要忘了还有<code>text-align</code> ，这个方法代码其实不多，就是理解原理有点困难，想要熟练应对各种情况还需好好研究；</li>\n<li>移动端兼容性允许的情况下能用flex就用flex。</li>\n</ul>\n<h3 id=\"四、两列布局\"><a href=\"#四、两列布局\" class=\"headerlink\" title=\"四、两列布局\"></a>四、两列布局</h3><h4 id=\"4-1-左列定宽-右列自适应\"><a href=\"#4-1-左列定宽-右列自适应\" class=\"headerlink\" title=\"4.1 左列定宽,右列自适应\"></a>4.1 左列定宽,右列自适应</h4><h5 id=\"1-利用float-margin实现\"><a href=\"#1-利用float-margin实现\" class=\"headerlink\" title=\"(1)利用float+margin实现\"></a>(1)利用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-利用float-margin-fix-实现\"><a href=\"#2-利用float-margin-fix-实现\" class=\"headerlink\" title=\"(2)利用float+margin(fix)实现\"></a>(2)利用float+margin(fix)实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right-fix&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right-fix &#123;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    margin-left: -100px; &#x2F;*正值大于或等于#left的宽度,才能显示在同一行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right&#123;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于或等于#left的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用float-overflow实现\"><a href=\"#3-使用float-overflow实现\" class=\"headerlink\" title=\"(3)使用float+overflow实现\"></a>(3)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    overflow: hidden; &#x2F;*触发bfc达到自适应*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"4-使用table实现\"><a href=\"#4-使用table实现\" class=\"headerlink\" title=\"(4)使用table实现\"></a>(4)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left,#right&#123;</span><br><span class=\"line\">    display: table-cell;  &#x2F;*利用单元格自动分配宽度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"5-使用绝对定位实现\"><a href=\"#5-使用绝对定位实现\" class=\"headerlink\" title=\"(5)使用绝对定位实现\"></a>(5)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;  &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 100px;  &#x2F;*值大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-使用flex实现\"><a href=\"#6-使用flex实现\" class=\"headerlink\" title=\"(6)使用flex实现\"></a>(6)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1; &#x2F;*均分了父元素剩余空间*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"7-使用Grid实现\"><a href=\"#7-使用Grid实现\" class=\"headerlink\" title=\"(7)使用Grid实现\"></a>(7)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px auto;  &#x2F;*设定2列就ok了,auto换成1fr也行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-左列自适应-右列定宽\"><a href=\"#4-2-左列自适应-右列定宽\" class=\"headerlink\" title=\"4.2 左列自适应,右列定宽\"></a>4.2 左列自适应,右列定宽</h4><p>效果:</p>\n<h5 id=\"1-使用float-margin实现\"><a href=\"#1-使用float-margin实现\" class=\"headerlink\" title=\"(1)使用float+margin实现\"></a>(1)使用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    padding-left: 100px;  &#x2F;*抵消#left的margin-left以达到#parent水平居中*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    margin-left: -100px; &#x2F;*正值等于#right的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-使用float-overflow实现\"><a href=\"#2-使用float-overflow实现\" class=\"headerlink\" title=\"(2)使用float+overflow实现\"></a>(2)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;   &lt;!--顺序要换一下--&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    margin-left: 10px;  &#x2F;*margin需要定义在#right中*&#x2F;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"3-使用table实现\"><a href=\"#3-使用table实现\" class=\"headerlink\" title=\"(3)使用table实现\"></a>(3)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"4-使用绝对定位实现\"><a href=\"#4-使用绝对定位实现\" class=\"headerlink\" title=\"(4)使用绝对定位实现\"></a>(4)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;  &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 100px;  &#x2F;*大于等于#rigth的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-使用flex实现\"><a href=\"#5-使用flex实现\" class=\"headerlink\" title=\"(5)使用flex实现\"></a>(5)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-使用Grid实现\"><a href=\"#6-使用Grid实现\" class=\"headerlink\" title=\"(6)使用Grid实现\"></a>(6)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: auto 100px;  &#x2F;*设定2列,auto换成1fr也行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-一列不定-一列自适应\"><a href=\"#4-3-一列不定-一列自适应\" class=\"headerlink\" title=\"4.3 一列不定,一列自适应\"></a>4.3 一列不定,一列自适应</h4><p>(盒子宽度随着内容增加或减少发生变化,另一个盒子自适应)</p>\n<p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1676e57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>变化后:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d19c5afc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float-overflow实现\"><a href=\"#1-使用float-overflow实现\" class=\"headerlink\" title=\"(1)使用float+overflow实现\"></a>(1)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    float: left;  &#x2F;*只设置浮动,不设宽度*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"2-使用flex实现\"><a href=\"#2-使用flex实现\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123; &#x2F;*不设宽度*&#x2F;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现\"><a href=\"#3-使用Grid实现\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: auto 1fr;  &#x2F;*auto和1fr换一下顺序就是左列自适应,右列不定宽了*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em>左列自适应,右列不定宽同理(参考4.1和4.3对应代码示例)</em></p>\n<h3 id=\"五、三列布局\"><a href=\"#五、三列布局\" class=\"headerlink\" title=\"五、三列布局\"></a>五、三列布局</h3><h4 id=\"5-1-两列定宽-一列自适应\"><a href=\"#5-1-两列定宽-一列自适应\" class=\"headerlink\" title=\"5.1 两列定宽,一列自适应\"></a>5.1 两列定宽,一列自适应</h4><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1ea53c5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float-margin实现-1\"><a href=\"#1-使用float-margin实现-1\" class=\"headerlink\" title=\"(1)使用float+margin实现\"></a>(1)使用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    min-width: 310px; &#x2F;*100+10+200,防止宽度不够,子元素换行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*#left和#center间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center&#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    margin-left: 320px;  &#x2F;*等于#left和#center的宽度之和加上间隔,多出来的就是#right和#center的间隔*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-使用float-overflow实现-1\"><a href=\"#2-使用float-overflow实现-1\" class=\"headerlink\" title=\"(2)使用float+overflow实现\"></a>(2)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    min-width: 320px; &#x2F;*100+10+200+20,防止宽度不够,子元素换行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px; &#x2F;*间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center&#123;</span><br><span class=\"line\">    margin-right: 10px; &#x2F;*在此定义和#right的间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"3-使用table实现-1\"><a href=\"#3-使用table实现-1\" class=\"headerlink\" title=\"(3)使用table实现\"></a>(3)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%; </span><br><span class=\"line\">    height: 520px; &#x2F;*抵消上下间距10*2的高度影响*&#x2F;</span><br><span class=\"line\">    margin: -10px 0;  &#x2F;*抵消上下边间距10的位置影响*&#x2F;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    &#x2F;*左右两边间距大了一点,子元素改用padding设置盒子间距就没有这个问题*&#x2F;</span><br><span class=\"line\">    border-spacing: 10px;  &#x2F;*关键!!!设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"4-使用flex实现\"><a href=\"#4-使用flex实现\" class=\"headerlink\" title=\"(4)使用flex实现\"></a>(4)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分达到自适应*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-使用Grid实现\"><a href=\"#5-使用Grid实现\" class=\"headerlink\" title=\"(5)使用Grid实现\"></a>(5)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px 200px auto; &#x2F;*设置3列,固定第一第二列的宽度,第三列auto或者1fr*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-两侧定宽-中间自适应\"><a href=\"#5-2-两侧定宽-中间自适应\" class=\"headerlink\" title=\"5.2 两侧定宽,中间自适应\"></a>5.2 两侧定宽,中间自适应</h4><h5 id=\"5-2-1-双飞翼布局方法\"><a href=\"#5-2-1-双飞翼布局方法\" class=\"headerlink\" title=\"5.2.1 双飞翼布局方法\"></a>5.2.1 双飞翼布局方法</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1cc24f8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;!--中间栏需要放在前面--&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;center_inbox&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;hr&gt;  &lt;!--方便观察原理--&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#header &#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -100%; &#x2F;*调整#left的位置,值等于自身宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center_inbox&#123;</span><br><span class=\"line\">    height: 480px;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    margin: 0 220px 0 120px;  &#x2F;*关键!!!左右边界等于左右盒子的宽度,多出来的为盒子间隔*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -200px;  &#x2F;*使right到指定的位置,值等于自身宽度*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer &#123;</span><br><span class=\"line\">    clear: both;  &#x2F;*注意清除浮动!!*&#x2F;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-2-圣杯布局方法\"><a href=\"#5-2-2-圣杯布局方法\" class=\"headerlink\" title=\"5.2.2 圣杯布局方法\"></a>5.2.2 圣杯布局方法</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;!--#center需要放在前面--&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#header&#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    padding: 0 215px 0 115px;  &#x2F;*为了使#center摆正,左右padding分别等于左右盒子的宽,可以结合左右盒子相对定位的left调整间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-left: -100%;  &#x2F;*使#left上去一行*&#x2F;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    left: -115px;  &#x2F;*相对定位调整#left的位置,正值大于或等于自身宽度*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100%;  &#x2F;*由于#parent的padding,达到自适应的目的*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    left: 215px; &#x2F;*相对定位调整#right的位置,大于或等于自身宽度*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -200px;  &#x2F;*使#right上去一行*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer&#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-3-使用Grid实现\"><a href=\"#5-2-3-使用Grid实现\" class=\"headerlink\" title=\"5.2.3 使用Grid实现\"></a>5.2.3 使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;!--#center需要放在前面--&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px auto 200px; &#x2F;*设定3列*&#x2F;</span><br><span class=\"line\">    grid-template-rows: 60px auto 60px; &#x2F;*设定3行*&#x2F;</span><br><span class=\"line\">    &#x2F;*设置网格区域分布*&#x2F;</span><br><span class=\"line\">    grid-template-areas: </span><br><span class=\"line\">        &quot;header header header&quot; </span><br><span class=\"line\">        &quot;leftside main rightside&quot; </span><br><span class=\"line\">        &quot;footer footer footer&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#header &#123;</span><br><span class=\"line\">    grid-area: header; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    grid-area: leftside;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    grid-area: main; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    margin: 0 15px; &#x2F;*设置间隔*&#x2F;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    grid-area: rightside; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer &#123;</span><br><span class=\"line\">    grid-area: footer; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-4-其他方法\"><a href=\"#5-2-4-其他方法\" class=\"headerlink\" title=\"5.2.4 其他方法\"></a>5.2.4 其他方法</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136f71b55c0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用table实现\"><a href=\"#1-使用table实现\" class=\"headerlink\" title=\"(1)使用table实现\"></a>(1)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；</li>\n<li>缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-</li>\n</ul>\n<h5 id=\"2-使用flex实现-1\"><a href=\"#2-使用flex实现-1\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用position实现\"><a href=\"#3-使用position实现\" class=\"headerlink\" title=\"(3)使用position实现\"></a>(3)使用position实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    position: relative; &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于等于#left的宽度,或者给#parent添加同样大小的padding-left*&#x2F;</span><br><span class=\"line\">    margin-right: 200px;  &#x2F;*大于等于#right的宽度,或者给#parent添加同样大小的padding-right*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：容易理解，兼容性比较好</li>\n<li>缺点：需手动计算宽度确定边距；脱离文档流；代码繁多</li>\n</ul>\n<h3 id=\"六、多列布局\"><a href=\"#六、多列布局\" class=\"headerlink\" title=\"六、多列布局\"></a>六、多列布局</h3><h4 id=\"6-1-等宽布局\"><a href=\"#6-1-等宽布局\" class=\"headerlink\" title=\"6.1 等宽布局\"></a>6.1 等宽布局</h4><h5 id=\"6-1-1-四列等宽\"><a href=\"#6-1-1-四列等宽\" class=\"headerlink\" title=\"6.1.1 四列等宽\"></a>6.1.1 四列等宽</h5><h5 id=\"1-使用float实现\"><a href=\"#1-使用float实现\" class=\"headerlink\" title=\"(1)使用float实现\"></a>(1)使用float实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136f835236f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    margin-left: -20px; &#x2F;*使整体内容看起来居中,抵消padding-left的影响*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    padding-left: 20px;  &#x2F;*盒子的边距*&#x2F;</span><br><span class=\"line\">    width: 25%;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-clip: content-box; &#x2F;*背景色从内容开始绘制,方便观察*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；兼容性较好</li>\n<li>缺点：需要手动清除浮动，否则会产生高度塌陷</li>\n</ul>\n<h5 id=\"2-使用table实现\"><a href=\"#2-使用table实现\" class=\"headerlink\" title=\"(2)使用table实现\"></a>(2)使用table实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136ffc5df62?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 540px;  &#x2F;*抵消上下边20*2间距的高度影响*&#x2F;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    margin: -20px 0;  &#x2F;*抵消上下边20*2间距的位置影响*&#x2F;</span><br><span class=\"line\">    &#x2F;*两边离页面间距较大,改用子元素设置padding来当成间隔就不会有这样的问题*&#x2F;</span><br><span class=\"line\">    border-spacing: 20px;  &#x2F;*设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；无需关注宽度，单元格自动等分</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"3-使用flex实现\"><a href=\"#3-使用flex实现\" class=\"headerlink\" title=\"(3)使用flex实现\"></a>(3)使用flex实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a137025dbc4c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    margin-left: -15px;  &#x2F;*使内容看起来居中*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    flex: 1; &#x2F;*一起平分#parent*&#x2F;</span><br><span class=\"line\">    margin-left: 15px; &#x2F;*设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"多列等宽\"><a href=\"#多列等宽\" class=\"headerlink\" title=\"多列等宽\"></a>多列等宽</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a137120f99b7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float实现-1\"><a href=\"#1-使用float实现-1\" class=\"headerlink\" title=\"(1)使用float实现\"></a>(1)使用float实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    float: left;  &#x2F;*添加浮动*&#x2F;</span><br><span class=\"line\">    width: 16.66666666666667%;  &#x2F;*100÷列数,得出百分比*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；兼容性较好</li>\n<li>缺点：需要手动清除浮动，否则会产生高度塌陷</li>\n</ul>\n<h5 id=\"2-使用table实现-1\"><a href=\"#2-使用table实现-1\" class=\"headerlink\" title=\"(2)使用table实现\"></a>(2)使用table实现</h5><p>html代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    display: table-cell; &#x2F;*无需关注列数,单元格自动平分*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；无需关注宽度。单元格自动等分</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不兼容ie8-</li>\n</ul>\n<h5 id=\"3-使用flex实现-1\"><a href=\"#3-使用flex实现-1\" class=\"headerlink\" title=\"(3)使用flex实现\"></a>(3)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*无需关注列数,一起平分#parent*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-使用Grid实现\"><a href=\"#4-使用Grid实现\" class=\"headerlink\" title=\"(4)使用Grid实现\"></a>(4)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: repeat(6,1fr);  &#x2F;*6就是列数*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-九宫格布局\"><a href=\"#6-2-九宫格布局\" class=\"headerlink\" title=\"6.2 九宫格布局\"></a>6.2 九宫格布局</h4><h5 id=\"1-使用table实现-1\"><a href=\"#1-使用table实现-1\" class=\"headerlink\" title=\"(1)使用table实现\"></a>(1)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.row &#123;</span><br><span class=\"line\">    display: table-row;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；</li>\n<li>缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-</li>\n</ul>\n<h5 id=\"2-使用flex实现-2\"><a href=\"#2-使用flex实现-2\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.row &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现-1\"><a href=\"#3-使用Grid实现-1\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p><em>CSS Grid非常强大,可以实现各种各样的三维布局,可查阅本文结尾的阅读推荐</em></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: repeat(3, 1fr); &#x2F;*等同于1fr 1fr 1fr,此为重复的合并写法*&#x2F;</span><br><span class=\"line\">    grid-template-rows: repeat(3, 1fr);  &#x2F;*等同于1fr 1fr 1fr,此为重复的合并写法*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-3-栅格系统\"><a href=\"#6-3-栅格系统\" class=\"headerlink\" title=\"6.3 栅格系统\"></a>6.3 栅格系统</h4><p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；提高页面内容的流动性，能适应多种设备；</li>\n</ul>\n<h5 id=\"1-用Less生成\"><a href=\"#1-用Less生成\" class=\"headerlink\" title=\"(1)用Less生成\"></a>(1)用Less生成</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*生成栅格系统*&#x2F;</span><br><span class=\"line\">@media screen and (max-width: 768px)&#123;</span><br><span class=\"line\">  .generate-columns(12);     &#x2F;*此处设置生成列数*&#x2F;</span><br><span class=\"line\">  .generate-columns(@n, @i: 1) when (@i &lt;&#x3D; @n) &#123;</span><br><span class=\"line\">    .column-xs-@&#123;i&#125; &#123;</span><br><span class=\"line\">      width: (@i * 100% &#x2F; @n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .generate-columns(@n, (@i+1));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen and (min-width: 768px)&#123;</span><br><span class=\"line\">  .generate-columns(12);    &#x2F;*此处设置生成列数*&#x2F;</span><br><span class=\"line\">  .generate-columns(@n, @i: 1) when (@i &lt;&#x3D; @n) &#123;</span><br><span class=\"line\">    .column-sm-@&#123;i&#125; &#123;</span><br><span class=\"line\">      width: (@i * 100% &#x2F; @n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .generate-columns(@n, (@i+1));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-xs-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-sm-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的CSS代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media screen and (max-width: 768px) &#123;</span><br><span class=\"line\">  .column-xs-1 &#123;  width: 8.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-2 &#123;  width: 16.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-3 &#123;  width: 25%;  &#125;</span><br><span class=\"line\">  .column-xs-4 &#123;  width: 33.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-5 &#123;  width: 41.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-6 &#123;  width: 50%;  &#125;</span><br><span class=\"line\">  .column-xs-7 &#123;  width: 58.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-8 &#123;  width: 66.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-9 &#123;  width: 75%;  &#125;</span><br><span class=\"line\">  .column-xs-10 &#123;  width: 83.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-11 &#123;  width: 91.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-12 &#123;  width: 100%;  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen and (min-width: 768px) &#123;</span><br><span class=\"line\">  .column-sm-1 &#123;  width: 8.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-2 &#123;  width: 16.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-3 &#123;  width: 25%;  &#125;</span><br><span class=\"line\">  .column-sm-4 &#123;  width: 33.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-5 &#123;  width: 41.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-6 &#123;  width: 50%;  &#125;</span><br><span class=\"line\">  .column-sm-7 &#123;  width: 58.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-8 &#123;  width: 66.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-9 &#123;  width: 75%;  &#125;</span><br><span class=\"line\">  .column-sm-10 &#123;  width: 83.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-11 &#123;  width: 91.66666667%;  &#125;  </span><br><span class=\"line\">  .column-sm-12 &#123;  width: 100%;  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-xs-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-sm-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、全屏布局\"><a href=\"#七、全屏布局\" class=\"headerlink\" title=\"七、全屏布局\"></a>七、全屏布局</h3><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a13716f2d8c3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用绝对定位实现\"><a href=\"#1-使用绝对定位实现\" class=\"headerlink\" title=\"(1)使用绝对定位实现\"></a>(1)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html, body, #parent &#123;height: 100%;overflow: hidden;&#125;</span><br><span class=\"line\">#parent &gt; div &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 100px;  &#x2F;*值大于等于#top的高度*&#x2F;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    bottom: 50px;  &#x2F;*值大于等于#bottom的高度*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">    left: 200px;  &#x2F;*值大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    top: 100px;  &#x2F;*值大于等于#top的高度*&#x2F;</span><br><span class=\"line\">    bottom: 50px;  &#x2F;*值大于等于#bottom的高度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：容易理解</li>\n<li>缺点：代码繁多；需要计算好各个盒子的宽高；</li>\n</ul>\n<h5 id=\"2-使用flex实现-3\"><a href=\"#2-使用flex实现-3\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;middle&quot;&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    margin: 0;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">html,body,#parent&#123;</span><br><span class=\"line\">    height:100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top &#123;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom &#123;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#middle &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现-2\"><a href=\"#3-使用Grid实现-2\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    margin: 0;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">html, body, #parent &#123;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    &#x2F;*分成2列,第一列宽度200px,第二列1fr平分剩余的部分,此处换成auto也行*&#x2F;</span><br><span class=\"line\">    grid-template-columns: 200px 1fr;  </span><br><span class=\"line\">    &#x2F;*分成3行,第一行高度100px,第二行auto为自适应,此处换成1fr也行,第3行高度为50px*&#x2F;</span><br><span class=\"line\">    grid-template-rows: 100px auto 50px; </span><br><span class=\"line\">    &#x2F;*定义网格区域分布*&#x2F;</span><br><span class=\"line\">    grid-template-areas:</span><br><span class=\"line\">        &quot;header header&quot;</span><br><span class=\"line\">        &quot;aside main&quot;</span><br><span class=\"line\">        &quot;footer footer&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent&gt;div&#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top&#123;</span><br><span class=\"line\">    grid-area: header;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left&#123;</span><br><span class=\"line\">    grid-area: aside;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right&#123;</span><br><span class=\"line\">    grid-area: main;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom&#123;</span><br><span class=\"line\">    grid-area: footer;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、水平居中\"><a href=\"#一、水平居中\" class=\"headerlink\" title=\"一、水平居中\"></a>一、水平居中</h3><h5 id=\"1-文本-行内元素-行内块级元素▲\"><a href=\"#1-文本-行内元素-行内块级元素▲\" class=\"headerlink\" title=\"(1)文本/行内元素/行内块级元素▲\"></a>(1)文本/行内元素/行内块级元素▲</h5><p>原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单快捷，容易理解，兼容性非常好</li>\n<li>缺点：只对行内内容有效；属性会继承影响到后代行内内容；如果子元素宽度大于父元素宽度则无效，只有后代行内内容中宽度小于设置text-align属性的元素宽度的时候，才会水平居中</li>\n</ul>\n<h5 id=\"2-单个块级元素▲\"><a href=\"#2-单个块级元素▲\" class=\"headerlink\" title=\"(2)单个块级元素▲\"></a>(2)单个块级元素▲</h5><p>原理：根据<a href=\"https://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins\" target=\"_blank\" rel=\"noopener\">规范</a>介绍得很清楚了，有这么一种情况：在margin有节余的同时如果左右margin设置了auto，将会均分剩余空间。另外，如果上下的margin设置了auto，其计算值为0</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#son&#123;</span><br><span class=\"line\">    width: 100px; &#x2F;*必须定宽*&#x2F;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：必须定宽，并且值不能为auto；宽度要小于父元素，否则无效</li>\n</ul>\n<h5 id=\"3-多个块级元素\"><a href=\"#3-多个块级元素\" class=\"headerlink\" title=\"(3)多个块级元素\"></a>(3)多个块级元素</h5><p>原理：text-align只控制行内内容(文字、行内元素、行内块级元素)如何相对他的块父元素对齐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.son&#123;</span><br><span class=\"line\">    display: inline-block; &#x2F;*改为行内或者行内块级形式，以达到text-align对其生效*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单，容易理解，兼容性非常好</li>\n<li>缺点：只对行内内容有效；属性会继承影响到后代行内内容；块级改为inline-block换行、空格会产生元素间隔</li>\n</ul>\n<h5 id=\"4-使用绝对定位实现▲\"><a href=\"#4-使用绝对定位实现▲\" class=\"headerlink\" title=\"(4)使用绝对定位实现▲\"></a>(4)使用绝对定位实现▲</h5><p>原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    width: 200px;  &#x2F;*定宽*&#x2F;</span><br><span class=\"line\">    position: relative;  &#x2F;*父相*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;  &#x2F;*子绝*&#x2F;</span><br><span class=\"line\">    left: 50%;  &#x2F;*父元素宽度一半,这里等同于left:100px*&#x2F;</span><br><span class=\"line\">    transform: translateX(-50%);  &#x2F;*自身宽度一半,等同于margin-left: -50px;*&#x2F;</span><br><span class=\"line\">    width: 100px;  &#x2F;*定宽*&#x2F;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">    background-color: #00ff00;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：使用margin-left兼容性好；不管是块级还是行内元素都可以实现</li>\n<li>缺点：代码较多；脱离文档流；使用margin-left需要知道宽度值；使用transform兼容性不好（ie9+）</li>\n</ul>\n<h5 id=\"5-任意个元素-flex\"><a href=\"#5-任意个元素-flex\" class=\"headerlink\" title=\"(5)任意个元素(flex)\"></a>(5)任意个元素(flex)</h5><p>原理：就是设置当前主轴对齐方式为居中。说不上为什么，flex无非就是主轴侧轴是重点，然后就是排列方式的设置，可以去看看文末的flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：功能强大；简单方便；容易理解</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"本章小结：\"><a href=\"#本章小结：\" class=\"headerlink\" title=\"本章小结：\"></a>本章小结：</h5><ul>\n<li>对于水平居中，我们应该先考虑，哪些元素有自带的居中效果，最先想到的应该就是 <code>text-align:center</code> 了，但是这个只对行内内容有效，所以我们要使用 <code>text-align:center</code> 就必须将子元素设置为 <code>display: inline;</code> 或者 <code>display: inline-block;</code> ；</li>\n<li>其次就是考虑能不能用<code>margin: 0 auto;</code> ，因为这都是一两句代码能搞定的事，实在不行就是用绝对定位去实现了。</li>\n<li>移动端能用flex就用flex，简单方便，灵活并且功能强大，无愧为网页布局的一大利器！</li>\n</ul>\n<h3 id=\"二、垂直居中\"><a href=\"#二、垂直居中\" class=\"headerlink\" title=\"二、垂直居中\"></a>二、垂直居中</h3><p><em>一,二,三章都是parent+son的简单结构,html代码和效果图就不贴出来了,第四章以后才有</em></p>\n<h5 id=\"1-单行文本-行内元素-行内块级元素▲\"><a href=\"#1-单行文本-行内元素-行内块级元素▲\" class=\"headerlink\" title=\"(1)单行文本/行内元素/行内块级元素▲\"></a>(1)单行文本/行内元素/行内块级元素▲</h5><p>原理：line-height的最终表现是通过inline box实现的，而无论inline box所占据的高度是多少（无论比文字大还是比文字小），其占据的空间都是与文字内容公用水平中垂线的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;  &#x2F;*与height等值*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：只能用于单行行内内容；要知道高度的值</li>\n</ul>\n<h5 id=\"2-多行文本-行内元素-行内块级元素\"><a href=\"#2-多行文本-行内元素-行内块级元素\" class=\"headerlink\" title=\"(2)多行文本/行内元素/行内块级元素\"></a>(2)多行文本/行内元素/行内块级元素</h5><p>原理同上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;  &#x2F;*或者用span把所有文字包裹起来，设置display：inline-block转换成图片的方式解决*&#x2F;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 30px;  &#x2F;*元素在页面呈现为5行,则line-height的值为height&#x2F;5*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：只能用于行内内容；需要知道高度和最终呈现多少行来计算出line-height的值，建议用span包裹多行文本</li>\n</ul>\n<h5 id=\"3-图片▲\"><a href=\"#3-图片▲\" class=\"headerlink\" title=\"(3)图片▲\"></a>(3)图片▲</h5><p>原理：<a href=\"http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\" target=\"_blank\" rel=\"noopener\">vertical-align和line-height的基友关系</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;</span><br><span class=\"line\">    font-size: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">img#son&#123;vertical-align: middle;&#125; &#x2F;*默认是基线对齐，改为middle*&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；兼容性好</li>\n<li>缺点：需要添加font-size: 0; 才可以完全的垂直居中；不过需要主要，html#parent包裹img之间需要有换行或空格</li>\n</ul>\n<h5 id=\"4-单个块级元素\"><a href=\"#4-单个块级元素\" class=\"headerlink\" title=\"(4)单个块级元素\"></a>(4)单个块级元素</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;son&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"4-1-使用tabel-cell实现\"><a href=\"#4-1-使用tabel-cell实现\" class=\"headerlink\" title=\"(4-1) 使用tabel-cell实现:\"></a>(4-1) 使用tabel-cell实现:</h6><p>原理：CSS Table，使表格内容对齐方式为middle</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；宽高不定；兼容性好（ie8+）</li>\n<li>缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置display: table; 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素</li>\n</ul>\n<h6 id=\"4-2-使用绝对定位实现-▲\"><a href=\"#4-2-使用绝对定位实现-▲\" class=\"headerlink\" title=\"(4-2) 使用绝对定位实现:▲\"></a>(4-2) 使用绝对定位实现:▲</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到水平居中的目的*&#x2F;</span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    position: relative;  &#x2F;*父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;  &#x2F;*子绝*&#x2F;</span><br><span class=\"line\">    top: 50%;  &#x2F;*父元素高度一半,这里等同于top:75px;*&#x2F;</span><br><span class=\"line\">    transform: translateY(-50%);  &#x2F;*自身高度一半,这里等同于margin-top:-25px;*&#x2F;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*优缺点</span><br><span class=\"line\">- 优点：使用margin-top兼容性好；不管是块级还是行内元素都可以实现</span><br><span class=\"line\">- 缺点：代码较多；脱离文档流；使用margin-top需要知道高度值；使用transform兼容性不好（ie9+）*&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*原理：当top、bottom为0时,margin-top&amp;bottom会无限延伸占满空间并且平分*&#x2F;</span><br><span class=\"line\">#parent&#123;position: relative;&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    margin: auto 0;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*优缺点</span><br><span class=\"line\">- 优点：简单;兼容性较好(ie8+)</span><br><span class=\"line\">- 缺点：脱离文档流*&#x2F;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"4-3-使用flex实现\"><a href=\"#4-3-使用flex实现\" class=\"headerlink\" title=\"(4-3) 使用flex实现:\"></a>(4-3) 使用flex实现:</h6><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;display: flex;&#125;</span><br><span class=\"line\">#son&#123;align-self: center;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\">&#x2F;*原理：这个尚未搞清楚，应该是flex使margin上下边界无限延伸至剩余空间并平分了*&#x2F;</span><br><span class=\"line\">#parent&#123;display: flex;&#125;</span><br><span class=\"line\">#son&#123;margin: auto 0;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"5-任意个元素-flex-1\"><a href=\"#5-任意个元素-flex-1\" class=\"headerlink\" title=\"(5)任意个元素(flex)\"></a>(5)任意个元素(flex)</h5><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.son&#123;</span><br><span class=\"line\">    align-self: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或 </span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"★本章小结：\"><a href=\"#★本章小结：\" class=\"headerlink\" title=\"★本章小结：\"></a>★本章小结：</h5><ul>\n<li>对于垂直居中，最先想到的应该就是 <code>line-height</code> 了，但是这个只能用于行内内容；</li>\n<li>其次就是考虑能不能用<code>vertical-align: middle;</code> ，不过这个一定要熟知原理才能用得顺手，建议看下<a href=\"http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\" target=\"_blank\" rel=\"noopener\">vertical-align和line-height的基友关系</a> ；</li>\n<li>然后便是绝对定位，虽然代码多了点，但是胜在适用于不同情况；</li>\n<li>移动端兼容性允许的情况下能用flex就用flex</li>\n</ul>\n<h3 id=\"三、水平垂直居中\"><a href=\"#三、水平垂直居中\" class=\"headerlink\" title=\"三、水平垂直居中\"></a>三、水平垂直居中</h3><h5 id=\"1-行内-行内块级-图片▲\"><a href=\"#1-行内-行内块级-图片▲\" class=\"headerlink\" title=\"(1)行内/行内块级/图片▲\"></a>(1)行内/行内块级/图片▲</h5><p>原理：<code>text-align: center;</code> 控制行内内容相对于块父元素水平居中,然后就是<code>line-height</code>和<code>vertical-align</code>的基友关系使其垂直居中，<code>font-size: 0;</code> 是为了消除近似居中的bug</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    line-height: 150px;  &#x2F;*行高的值与height相等*&#x2F;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    font-size: 0;   &#x2F;*消除幽灵空白节点的bug*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    &#x2F;*display: inline-block;*&#x2F;  &#x2F;*如果是块级元素需改为行内或行内块级才生效*&#x2F;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：代码简单；兼容性好（ie8+）</li>\n<li>缺点：只对行内内容有效；需要添加<code>font-size: 0;</code> 才可以完全的垂直居中；不过需要注意html中#parent包裹#son之间需要有换行或空格；熟悉<code>line-height</code>和<code>vertical-align</code>的基友关系较难</li>\n</ul>\n<h5 id=\"2-table-cell\"><a href=\"#2-table-cell\" class=\"headerlink\" title=\"(2)table-cell\"></a>(2)table-cell</h5><p>原理：CSS Table，使表格内容垂直对齐方式为middle,然后根据是行内内容还是块级内容采取不同的方式达到水平居中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    vertical-align: middle;</span><br><span class=\"line\">    &#x2F;*text-align: center;*&#x2F;   &#x2F;*如果是行内元素就添加这个*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    &#x2F;*margin: 0 auto;*&#x2F;    &#x2F;*如果是块级元素就添加这个*&#x2F;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；适用于宽度高度未知情况；兼容性好（ie8+）</li>\n<li>缺点：设置tabl-cell的元素，宽度和高度的值设置百分比无效，需要给它的父元素设置<code>display: table;</code> 才生效；table-cell不感知margin，在父元素上设置table-row等属性，也会使其不感知height；设置float或position会对默认布局造成破坏，可以考虑为之增加一个父div定义float等属性；内容溢出时会自动撑开父元素</li>\n</ul>\n<h5 id=\"3-button作为父元素\"><a href=\"#3-button作为父元素\" class=\"headerlink\" title=\"(3)button作为父元素\"></a>(3)button作为父元素</h5><p>原理：button的默认样式，再把需要居中的元素表现形式改为行内或行内块级就好</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">button#parent&#123;  &#x2F;*改掉button默认样式就好了,不需要居中处理*&#x2F;</span><br><span class=\"line\">    height: 150px;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    outline: none;  </span><br><span class=\"line\">    border: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    display: inline-block; &#x2F;*button自带text-align: center,改为行内水平居中生效*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单方便，充分利用默认样式</li>\n<li>缺点：只适用于行内内容；需要清除部分默认样式；水平垂直居中兼容性很好，但是ie下点击会有凹陷效果！</li>\n</ul>\n<h5 id=\"4-绝对定位\"><a href=\"#4-绝对定位\" class=\"headerlink\" title=\"(4)绝对定位\"></a>(4)绝对定位</h5><p>原理：子绝父相，top、right、bottom、left的值是相对于父元素尺寸的，然后margin或者transform是相对于自身尺寸的，组合使用达到几何上的水平垂直居中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 50%;</span><br><span class=\"line\">    left: 50%;</span><br><span class=\"line\">    &#x2F;*定宽高时等同于margin-left:负自身宽度一半;margin-top:负自身高度一半;*&#x2F;</span><br><span class=\"line\">    transform: translate(-50%,-50%); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：使用margin兼容性好；不管是块级还是行内元素都可以实现</li>\n<li>缺点：代码较多；脱离文档流；使用margin需要知道宽高；使用transform兼容性不好（ie9+）</li>\n</ul>\n<h5 id=\"5-绝对居中\"><a href=\"#5-绝对居中\" class=\"headerlink\" title=\"(5)绝对居中\"></a>(5)绝对居中</h5><p>原理：当top、bottom为0时,margin-top&amp;bottom设置auto的话会无限延伸占满空间并且平分；当left、right为0时,margin-left&amp;right设置auto的话会无限延伸占满空间并且平分</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：无需关注宽高；兼容性较好(ie8+)</li>\n<li>缺点：代码较多；脱离文档流</li>\n</ul>\n<h5 id=\"6-flex\"><a href=\"#6-flex\" class=\"headerlink\" title=\"(6)flex\"></a>(6)flex</h5><p>原理：flex设置对齐方式罢了，请查阅文末flex阅读推荐</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">    align-items: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\"></span><br><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    justify-content: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#son&#123;</span><br><span class=\"line\">    align-self: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单灵活；功能强大</li>\n<li>缺点：PC端<a href=\"https://caniuse.com/#search=flex\" target=\"_blank\" rel=\"noopener\">兼容性不好</a>，移动端（Android4.0+）</li>\n</ul>\n<h5 id=\"7-视窗居中\"><a href=\"#7-视窗居中\" class=\"headerlink\" title=\"(7)视窗居中\"></a>(7)视窗居中</h5><p>原理：vh为视口单位，视口即文档可视的部分，50vh就是视口高度的50/100，设置50vh上边距再</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#son&#123;</span><br><span class=\"line\">\t&#x2F;*0如果去掉，则会多出滚动条并且上下都是50vh的margin。如果去掉就给body加上overflow:hidden;*&#x2F;</span><br><span class=\"line\">    margin: 50vh auto 0;  </span><br><span class=\"line\">    transform: translateY(-50%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点</p>\n<ul>\n<li>优点：简单；容易理解；两句代码达到屏幕水平垂直居中</li>\n<li>缺点：兼容性不好（ie9+，Android4.4+）</li>\n</ul>\n<h5 id=\"★本章小结：-1\"><a href=\"#★本章小结：-1\" class=\"headerlink\" title=\"★本章小结：\"></a>★本章小结：</h5><ul>\n<li>一般情况下，水平垂直居中，我们最常用的就是绝对定位加负边距了，缺点就是需要知道宽高，使用transform倒是可以不需要，但是兼容性不好（ie9+）；</li>\n<li>其次就是绝对居中，绝对定位设置top、left、right、bottom为0，然后<code>margin:auto;</code> 让浏览器自动平分边距以达到水平垂直居中的目的；</li>\n<li>如果是行内/行内块级/图片这些内容，可以优先考虑<code>line-height</code>和<code>vertical-align</code> 结合使用，不要忘了还有<code>text-align</code> ，这个方法代码其实不多，就是理解原理有点困难，想要熟练应对各种情况还需好好研究；</li>\n<li>移动端兼容性允许的情况下能用flex就用flex。</li>\n</ul>\n<h3 id=\"四、两列布局\"><a href=\"#四、两列布局\" class=\"headerlink\" title=\"四、两列布局\"></a>四、两列布局</h3><h4 id=\"4-1-左列定宽-右列自适应\"><a href=\"#4-1-左列定宽-右列自适应\" class=\"headerlink\" title=\"4.1 左列定宽,右列自适应\"></a>4.1 左列定宽,右列自适应</h4><h5 id=\"1-利用float-margin实现\"><a href=\"#1-利用float-margin实现\" class=\"headerlink\" title=\"(1)利用float+margin实现\"></a>(1)利用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-利用float-margin-fix-实现\"><a href=\"#2-利用float-margin-fix-实现\" class=\"headerlink\" title=\"(2)利用float+margin(fix)实现\"></a>(2)利用float+margin(fix)实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right-fix&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right-fix &#123;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    margin-left: -100px; &#x2F;*正值大于或等于#left的宽度,才能显示在同一行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right&#123;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于或等于#left的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用float-overflow实现\"><a href=\"#3-使用float-overflow实现\" class=\"headerlink\" title=\"(3)使用float+overflow实现\"></a>(3)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    overflow: hidden; &#x2F;*触发bfc达到自适应*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"4-使用table实现\"><a href=\"#4-使用table实现\" class=\"headerlink\" title=\"(4)使用table实现\"></a>(4)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left,#right&#123;</span><br><span class=\"line\">    display: table-cell;  &#x2F;*利用单元格自动分配宽度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"5-使用绝对定位实现\"><a href=\"#5-使用绝对定位实现\" class=\"headerlink\" title=\"(5)使用绝对定位实现\"></a>(5)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;  &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 100px;  &#x2F;*值大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-使用flex实现\"><a href=\"#6-使用flex实现\" class=\"headerlink\" title=\"(6)使用flex实现\"></a>(6)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1; &#x2F;*均分了父元素剩余空间*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"7-使用Grid实现\"><a href=\"#7-使用Grid实现\" class=\"headerlink\" title=\"(7)使用Grid实现\"></a>(7)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px auto;  &#x2F;*设定2列就ok了,auto换成1fr也行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-左列自适应-右列定宽\"><a href=\"#4-2-左列自适应-右列定宽\" class=\"headerlink\" title=\"4.2 左列自适应,右列定宽\"></a>4.2 左列自适应,右列定宽</h4><p>效果:</p>\n<h5 id=\"1-使用float-margin实现\"><a href=\"#1-使用float-margin实现\" class=\"headerlink\" title=\"(1)使用float+margin实现\"></a>(1)使用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    padding-left: 100px;  &#x2F;*抵消#left的margin-left以达到#parent水平居中*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    margin-left: -100px; &#x2F;*正值等于#right的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-使用float-overflow实现\"><a href=\"#2-使用float-overflow实现\" class=\"headerlink\" title=\"(2)使用float+overflow实现\"></a>(2)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;   &lt;!--顺序要换一下--&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    margin-left: 10px;  &#x2F;*margin需要定义在#right中*&#x2F;</span><br><span class=\"line\">    float: right;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"3-使用table实现\"><a href=\"#3-使用table实现\" class=\"headerlink\" title=\"(3)使用table实现\"></a>(3)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"4-使用绝对定位实现\"><a href=\"#4-使用绝对定位实现\" class=\"headerlink\" title=\"(4)使用绝对定位实现\"></a>(4)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    position: relative;  &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 100px;  &#x2F;*大于等于#rigth的宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-使用flex实现\"><a href=\"#5-使用flex实现\" class=\"headerlink\" title=\"(5)使用flex实现\"></a>(5)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-使用Grid实现\"><a href=\"#6-使用Grid实现\" class=\"headerlink\" title=\"(6)使用Grid实现\"></a>(6)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: auto 100px;  &#x2F;*设定2列,auto换成1fr也行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-一列不定-一列自适应\"><a href=\"#4-3-一列不定-一列自适应\" class=\"headerlink\" title=\"4.3 一列不定,一列自适应\"></a>4.3 一列不定,一列自适应</h4><p>(盒子宽度随着内容增加或减少发生变化,另一个盒子自适应)</p>\n<p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1676e57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>变化后:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d19c5afc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float-overflow实现\"><a href=\"#1-使用float-overflow实现\" class=\"headerlink\" title=\"(1)使用float+overflow实现\"></a>(1)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    float: left;  &#x2F;*只设置浮动,不设宽度*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"2-使用flex实现\"><a href=\"#2-使用flex实现\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123; &#x2F;*不设宽度*&#x2F;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现\"><a href=\"#3-使用Grid实现\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列不定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: auto 1fr;  &#x2F;*auto和1fr换一下顺序就是左列自适应,右列不定宽了*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><em>左列自适应,右列不定宽同理(参考4.1和4.3对应代码示例)</em></p>\n<h3 id=\"五、三列布局\"><a href=\"#五、三列布局\" class=\"headerlink\" title=\"五、三列布局\"></a>五、三列布局</h3><h4 id=\"5-1-两列定宽-一列自适应\"><a href=\"#5-1-两列定宽-一列自适应\" class=\"headerlink\" title=\"5.1 两列定宽,一列自适应\"></a>5.1 两列定宽,一列自适应</h4><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1ea53c5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float-margin实现-1\"><a href=\"#1-使用float-margin实现-1\" class=\"headerlink\" title=\"(1)使用float+margin实现\"></a>(1)使用float+margin实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    min-width: 310px; &#x2F;*100+10+200,防止宽度不够,子元素换行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*#left和#center间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center&#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    margin-left: 320px;  &#x2F;*等于#left和#center的宽度之和加上间隔,多出来的就是#right和#center的间隔*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-使用float-overflow实现-1\"><a href=\"#2-使用float-overflow实现-1\" class=\"headerlink\" title=\"(2)使用float+overflow实现\"></a>(2)使用float+overflow实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent&#123;</span><br><span class=\"line\">    min-width: 320px; &#x2F;*100+10+200+20,防止宽度不够,子元素换行*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px; &#x2F;*间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center&#123;</span><br><span class=\"line\">    margin-right: 10px; &#x2F;*在此定义和#right的间隔*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    overflow: hidden;  &#x2F;*触发bfc*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用bfc达到自适应效果</li>\n<li>缺点：浮动脱离文档流，需要手动清除浮动，否则会产生高度塌陷；不支持ie6</li>\n</ul>\n<h5 id=\"3-使用table实现-1\"><a href=\"#3-使用table实现-1\" class=\"headerlink\" title=\"(3)使用table实现\"></a>(3)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%; </span><br><span class=\"line\">    height: 520px; &#x2F;*抵消上下间距10*2的高度影响*&#x2F;</span><br><span class=\"line\">    margin: -10px 0;  &#x2F;*抵消上下边间距10的位置影响*&#x2F;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    &#x2F;*左右两边间距大了一点,子元素改用padding设置盒子间距就没有这个问题*&#x2F;</span><br><span class=\"line\">    border-spacing: 10px;  &#x2F;*关键!!!设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解，无需关注定宽的宽度，利用单元格自动分配达到自适应效果</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"4-使用flex实现\"><a href=\"#4-使用flex实现\" class=\"headerlink\" title=\"(4)使用flex实现\"></a>(4)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分达到自适应*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-使用Grid实现\"><a href=\"#5-使用Grid实现\" class=\"headerlink\" title=\"(5)使用Grid实现\"></a>(5)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px 200px auto; &#x2F;*设置3列,固定第一第二列的宽度,第三列auto或者1fr*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    margin-right: 10px;  &#x2F;*间距*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-2-两侧定宽-中间自适应\"><a href=\"#5-2-两侧定宽-中间自适应\" class=\"headerlink\" title=\"5.2 两侧定宽,中间自适应\"></a>5.2 两侧定宽,中间自适应</h4><h5 id=\"5-2-1-双飞翼布局方法\"><a href=\"#5-2-1-双飞翼布局方法\" class=\"headerlink\" title=\"5.2.1 双飞翼布局方法\"></a>5.2.1 双飞翼布局方法</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136d1cc24f8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;!--中间栏需要放在前面--&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;center_inbox&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;hr&gt;  &lt;!--方便观察原理--&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#header &#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -100%; &#x2F;*调整#left的位置,值等于自身宽度*&#x2F;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center_inbox&#123;</span><br><span class=\"line\">    height: 480px;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    margin: 0 220px 0 120px;  &#x2F;*关键!!!左右边界等于左右盒子的宽度,多出来的为盒子间隔*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -200px;  &#x2F;*使right到指定的位置,值等于自身宽度*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer &#123;</span><br><span class=\"line\">    clear: both;  &#x2F;*注意清除浮动!!*&#x2F;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-2-圣杯布局方法\"><a href=\"#5-2-2-圣杯布局方法\" class=\"headerlink\" title=\"5.2.2 圣杯布局方法\"></a>5.2.2 圣杯布局方法</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;!--#center需要放在前面--&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#header&#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    padding: 0 215px 0 115px;  &#x2F;*为了使#center摆正,左右padding分别等于左右盒子的宽,可以结合左右盒子相对定位的left调整间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    margin-left: -100%;  &#x2F;*使#left上去一行*&#x2F;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    left: -115px;  &#x2F;*相对定位调整#left的位置,正值大于或等于自身宽度*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    width: 100%;  &#x2F;*由于#parent的padding,达到自适应的目的*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    left: 215px; &#x2F;*相对定位调整#right的位置,大于或等于自身宽度*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: -200px;  &#x2F;*使#right上去一行*&#x2F;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer&#123;</span><br><span class=\"line\">    height: 60px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-3-使用Grid实现\"><a href=\"#5-2-3-使用Grid实现\" class=\"headerlink\" title=\"5.2.3 使用Grid实现\"></a>5.2.3 使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;header&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;!--#center需要放在前面--&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应</span><br><span class=\"line\">        &lt;hr&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;footer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: 100px auto 200px; &#x2F;*设定3列*&#x2F;</span><br><span class=\"line\">    grid-template-rows: 60px auto 60px; &#x2F;*设定3行*&#x2F;</span><br><span class=\"line\">    &#x2F;*设置网格区域分布*&#x2F;</span><br><span class=\"line\">    grid-template-areas: </span><br><span class=\"line\">        &quot;header header header&quot; </span><br><span class=\"line\">        &quot;leftside main rightside&quot; </span><br><span class=\"line\">        &quot;footer footer footer&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#header &#123;</span><br><span class=\"line\">    grid-area: header; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    grid-area: leftside;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    grid-area: main; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    margin: 0 15px; &#x2F;*设置间隔*&#x2F;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    grid-area: rightside; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">    opacity: 0.5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#footer &#123;</span><br><span class=\"line\">    grid-area: footer; &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-2-4-其他方法\"><a href=\"#5-2-4-其他方法\" class=\"headerlink\" title=\"5.2.4 其他方法\"></a>5.2.4 其他方法</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136f71b55c0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用table实现\"><a href=\"#1-使用table实现\" class=\"headerlink\" title=\"(1)使用table实现\"></a>(1)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；</li>\n<li>缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-</li>\n</ul>\n<h5 id=\"2-使用flex实现-1\"><a href=\"#2-使用flex实现-1\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*均分#parent剩余的部分*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用position实现\"><a href=\"#3-使用position实现\" class=\"headerlink\" title=\"(3)使用position实现\"></a>(3)使用position实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;左列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;center&quot;&gt;中间自适应&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;右列定宽&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    position: relative; &#x2F;*子绝父相*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    width: 100px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#center &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin-left: 100px; &#x2F;*大于等于#left的宽度,或者给#parent添加同样大小的padding-left*&#x2F;</span><br><span class=\"line\">    margin-right: 200px;  &#x2F;*大于等于#right的宽度,或者给#parent添加同样大小的padding-right*&#x2F;</span><br><span class=\"line\">    background-color: #eeff2b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：容易理解，兼容性比较好</li>\n<li>缺点：需手动计算宽度确定边距；脱离文档流；代码繁多</li>\n</ul>\n<h3 id=\"六、多列布局\"><a href=\"#六、多列布局\" class=\"headerlink\" title=\"六、多列布局\"></a>六、多列布局</h3><h4 id=\"6-1-等宽布局\"><a href=\"#6-1-等宽布局\" class=\"headerlink\" title=\"6.1 等宽布局\"></a>6.1 等宽布局</h4><h5 id=\"6-1-1-四列等宽\"><a href=\"#6-1-1-四列等宽\" class=\"headerlink\" title=\"6.1.1 四列等宽\"></a>6.1.1 四列等宽</h5><h5 id=\"1-使用float实现\"><a href=\"#1-使用float实现\" class=\"headerlink\" title=\"(1)使用float实现\"></a>(1)使用float实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136f835236f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    margin-left: -20px; &#x2F;*使整体内容看起来居中,抵消padding-left的影响*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    padding-left: 20px;  &#x2F;*盒子的边距*&#x2F;</span><br><span class=\"line\">    width: 25%;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    background-clip: content-box; &#x2F;*背景色从内容开始绘制,方便观察*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；兼容性较好</li>\n<li>缺点：需要手动清除浮动，否则会产生高度塌陷</li>\n</ul>\n<h5 id=\"2-使用table实现\"><a href=\"#2-使用table实现\" class=\"headerlink\" title=\"(2)使用table实现\"></a>(2)使用table实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a136ffc5df62?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 540px;  &#x2F;*抵消上下边20*2间距的高度影响*&#x2F;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">    margin: -20px 0;  &#x2F;*抵消上下边20*2间距的位置影响*&#x2F;</span><br><span class=\"line\">    &#x2F;*两边离页面间距较大,改用子元素设置padding来当成间隔就不会有这样的问题*&#x2F;</span><br><span class=\"line\">    border-spacing: 20px;  &#x2F;*设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；无需关注宽度，单元格自动等分</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不支持ie8-</li>\n</ul>\n<h5 id=\"3-使用flex实现\"><a href=\"#3-使用flex实现\" class=\"headerlink\" title=\"(3)使用flex实现\"></a>(3)使用flex实现</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a137025dbc4c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    margin-left: -15px;  &#x2F;*使内容看起来居中*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    flex: 1; &#x2F;*一起平分#parent*&#x2F;</span><br><span class=\"line\">    margin-left: 15px; &#x2F;*设置间距*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"多列等宽\"><a href=\"#多列等宽\" class=\"headerlink\" title=\"多列等宽\"></a>多列等宽</h5><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a137120f99b7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用float实现-1\"><a href=\"#1-使用float实现-1\" class=\"headerlink\" title=\"(1)使用float实现\"></a>(1)使用float实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    float: left;  &#x2F;*添加浮动*&#x2F;</span><br><span class=\"line\">    width: 16.66666666666667%;  &#x2F;*100÷列数,得出百分比*&#x2F;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；兼容性较好</li>\n<li>缺点：需要手动清除浮动，否则会产生高度塌陷</li>\n</ul>\n<h5 id=\"2-使用table实现-1\"><a href=\"#2-使用table实现-1\" class=\"headerlink\" title=\"(2)使用table实现\"></a>(2)使用table实现</h5><p>html代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    display: table-cell; &#x2F;*无需关注列数,单元格自动平分*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简单，容易理解；无需关注宽度。单元格自动等分</li>\n<li>缺点：margin失效；设置间隔比较麻烦；不兼容ie8-</li>\n</ul>\n<h5 id=\"3-使用flex实现-1\"><a href=\"#3-使用flex实现-1\" class=\"headerlink\" title=\"(3)使用flex实现\"></a>(3)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;</span><br><span class=\"line\">    flex: 1;  &#x2F;*无需关注列数,一起平分#parent*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-使用Grid实现\"><a href=\"#4-使用Grid实现\" class=\"headerlink\" title=\"(4)使用Grid实现\"></a>(4)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;1 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;2 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;3 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;4 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;5 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;column&quot;&gt;6 &lt;p&gt;我是文字我是文字我输文字我是文字我是文字&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: repeat(6,1fr);  &#x2F;*6就是列数*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column&#123;&#125;</span><br><span class=\"line\">.column:nth-child(odd)&#123;</span><br><span class=\"line\">    background-color: #f00;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.column:nth-child(even)&#123;</span><br><span class=\"line\">    background-color: #0f0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-2-九宫格布局\"><a href=\"#6-2-九宫格布局\" class=\"headerlink\" title=\"6.2 九宫格布局\"></a>6.2 九宫格布局</h4><h5 id=\"1-使用table实现-1\"><a href=\"#1-使用table实现-1\" class=\"headerlink\" title=\"(1)使用table实现\"></a>(1)使用table实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.row &#123;</span><br><span class=\"line\">    display: table-row;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">    display: table-cell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；</li>\n<li>缺点：margin失效，采用border-spacing表格两边的间隔无法消除；不支持ie8-</li>\n</ul>\n<h5 id=\"2-使用flex实现-2\"><a href=\"#2-使用flex实现-2\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.row &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现-1\"><a href=\"#3-使用Grid实现-1\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p><em>CSS Grid非常强大,可以实现各种各样的三维布局,可查阅本文结尾的阅读推荐</em></p>\n<p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;3&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;4&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;5&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;6&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;7&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;8&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;item&quot;&gt;9&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 1200px;</span><br><span class=\"line\">    height: 500px;</span><br><span class=\"line\">    margin: 0 auto;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    grid-template-columns: repeat(3, 1fr); &#x2F;*等同于1fr 1fr 1fr,此为重复的合并写法*&#x2F;</span><br><span class=\"line\">    grid-template-rows: repeat(3, 1fr);  &#x2F;*等同于1fr 1fr 1fr,此为重复的合并写法*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-3-栅格系统\"><a href=\"#6-3-栅格系统\" class=\"headerlink\" title=\"6.3 栅格系统\"></a>6.3 栅格系统</h4><p>优缺点：</p>\n<ul>\n<li>优点：代码简洁，容易理解；提高页面内容的流动性，能适应多种设备；</li>\n</ul>\n<h5 id=\"1-用Less生成\"><a href=\"#1-用Less生成\" class=\"headerlink\" title=\"(1)用Less生成\"></a>(1)用Less生成</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*生成栅格系统*&#x2F;</span><br><span class=\"line\">@media screen and (max-width: 768px)&#123;</span><br><span class=\"line\">  .generate-columns(12);     &#x2F;*此处设置生成列数*&#x2F;</span><br><span class=\"line\">  .generate-columns(@n, @i: 1) when (@i &lt;&#x3D; @n) &#123;</span><br><span class=\"line\">    .column-xs-@&#123;i&#125; &#123;</span><br><span class=\"line\">      width: (@i * 100% &#x2F; @n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .generate-columns(@n, (@i+1));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen and (min-width: 768px)&#123;</span><br><span class=\"line\">  .generate-columns(12);    &#x2F;*此处设置生成列数*&#x2F;</span><br><span class=\"line\">  .generate-columns(@n, @i: 1) when (@i &lt;&#x3D; @n) &#123;</span><br><span class=\"line\">    .column-sm-@&#123;i&#125; &#123;</span><br><span class=\"line\">      width: (@i * 100% &#x2F; @n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .generate-columns(@n, (@i+1));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-xs-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-sm-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后的CSS代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media screen and (max-width: 768px) &#123;</span><br><span class=\"line\">  .column-xs-1 &#123;  width: 8.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-2 &#123;  width: 16.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-3 &#123;  width: 25%;  &#125;</span><br><span class=\"line\">  .column-xs-4 &#123;  width: 33.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-5 &#123;  width: 41.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-6 &#123;  width: 50%;  &#125;</span><br><span class=\"line\">  .column-xs-7 &#123;  width: 58.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-8 &#123;  width: 66.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-9 &#123;  width: 75%;  &#125;</span><br><span class=\"line\">  .column-xs-10 &#123;  width: 83.33333333%;  &#125;</span><br><span class=\"line\">  .column-xs-11 &#123;  width: 91.66666667%;  &#125;</span><br><span class=\"line\">  .column-xs-12 &#123;  width: 100%;  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen and (min-width: 768px) &#123;</span><br><span class=\"line\">  .column-sm-1 &#123;  width: 8.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-2 &#123;  width: 16.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-3 &#123;  width: 25%;  &#125;</span><br><span class=\"line\">  .column-sm-4 &#123;  width: 33.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-5 &#123;  width: 41.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-6 &#123;  width: 50%;  &#125;</span><br><span class=\"line\">  .column-sm-7 &#123;  width: 58.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-8 &#123;  width: 66.66666667%;  &#125;</span><br><span class=\"line\">  .column-sm-9 &#123;  width: 75%;  &#125;</span><br><span class=\"line\">  .column-sm-10 &#123;  width: 83.33333333%;  &#125;</span><br><span class=\"line\">  .column-sm-11 &#123;  width: 91.66666667%;  &#125;  </span><br><span class=\"line\">  .column-sm-12 &#123;  width: 100%;  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-xs-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div[class^&#x3D;&quot;column-sm-&quot;]&#123;</span><br><span class=\"line\">\tfloat: left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、全屏布局\"><a href=\"#七、全屏布局\" class=\"headerlink\" title=\"七、全屏布局\"></a>七、全屏布局</h3><p>效果图:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/9/1620a13716f2d8c3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image.png\"></p>\n<h5 id=\"1-使用绝对定位实现\"><a href=\"#1-使用绝对定位实现\" class=\"headerlink\" title=\"(1)使用绝对定位实现\"></a>(1)使用绝对定位实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html, body, #parent &#123;height: 100%;overflow: hidden;&#125;</span><br><span class=\"line\">#parent &gt; div &#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 100px;  &#x2F;*值大于等于#top的高度*&#x2F;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    bottom: 50px;  &#x2F;*值大于等于#bottom的高度*&#x2F;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">    left: 200px;  &#x2F;*值大于等于#left的宽度*&#x2F;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    top: 100px;  &#x2F;*值大于等于#top的高度*&#x2F;</span><br><span class=\"line\">    bottom: 50px;  &#x2F;*值大于等于#bottom的高度*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>优缺点：</p>\n<ul>\n<li>优点：容易理解</li>\n<li>缺点：代码繁多；需要计算好各个盒子的宽高；</li>\n</ul>\n<h5 id=\"2-使用flex实现-3\"><a href=\"#2-使用flex实现-3\" class=\"headerlink\" title=\"(2)使用flex实现\"></a>(2)使用flex实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;middle&quot;&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">        &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    margin: 0;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">html,body,#parent&#123;</span><br><span class=\"line\">    height:100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-direction: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top &#123;</span><br><span class=\"line\">    height: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom &#123;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#middle &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right &#123;</span><br><span class=\"line\">    flex: 1;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-使用Grid实现-2\"><a href=\"#3-使用Grid实现-2\" class=\"headerlink\" title=\"(3)使用Grid实现\"></a>(3)使用Grid实现</h5><p>html代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;parent&quot;&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;top&quot;&gt;top&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;left&quot;&gt;left&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;right&quot;&gt;right&lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div id&#x3D;&quot;bottom&quot;&gt;bottom&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>css代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    margin: 0;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">html, body, #parent &#123;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent &#123;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">    display: grid;</span><br><span class=\"line\">    &#x2F;*分成2列,第一列宽度200px,第二列1fr平分剩余的部分,此处换成auto也行*&#x2F;</span><br><span class=\"line\">    grid-template-columns: 200px 1fr;  </span><br><span class=\"line\">    &#x2F;*分成3行,第一行高度100px,第二行auto为自适应,此处换成1fr也行,第3行高度为50px*&#x2F;</span><br><span class=\"line\">    grid-template-rows: 100px auto 50px; </span><br><span class=\"line\">    &#x2F;*定义网格区域分布*&#x2F;</span><br><span class=\"line\">    grid-template-areas:</span><br><span class=\"line\">        &quot;header header&quot;</span><br><span class=\"line\">        &quot;aside main&quot;</span><br><span class=\"line\">        &quot;footer footer&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#parent&gt;div&#123;</span><br><span class=\"line\">    border: 1px solid #000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#top&#123;</span><br><span class=\"line\">    grid-area: header;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#left&#123;</span><br><span class=\"line\">    grid-area: aside;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#right&#123;</span><br><span class=\"line\">    grid-area: main;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#bottom&#123;</span><br><span class=\"line\">    grid-area: footer;  &#x2F;*指定在哪个网格区域*&#x2F;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}